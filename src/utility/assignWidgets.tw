:: Assign Widgets [widget nobr]

/%
	Call as <<assignJob slaveObject $returnto | _currentRule.facilityRemove | "serve in the master suite"
	$args[0] slave object. *MUST be present*
	$args[1] Job to assign slave to. Will accept the $returnTo vars and the _currentRule.assignFacility vars and the actual job assignments "serve in the master suite" etc.

	This is basically a Widget version of assign but will work anywhere, and saves to the slaves[..] array, and changes your $args[0] var sent.
%/
<<widget assignJob>>
<<if ($args[1] != "Pit") && ($args[1] != "Coursing Association")>>

<<removeJob $args[0] $args[0].assignment>>

<<set _wID = $args[0].ID, _SL = $slaves.length>>

/% Get slaves[_wi] index # %/
<<if $i < _SL && _wID == $slaves[$i].ID>>
	<<set _wi = $i>>
<<else>>
	<<for _wi = 0; _wi < _SL; _wi++>>
		<<if _wID == $slaves[_wi].ID>>
			<<break>>
		<</if>>
	<</for>>
<</if>>

/% use .toLowerCase() to get rid of a few dupe conditions. %/
<<switch $args[1].toLowerCase()>>
<<case "clinic" "get treatment in the clinic">>
	<<set $args[0].assignment = "get treatment in the clinic",  $args[0].assignmentVisible = 0, $clinicSlaves++, $CliniciIDs.push({ID: _wID, Index: _wi})>>
<<case "schoolroom" "learn in the schoolroom">>
	<<set $args[0].assignment = "learn in the schoolroom",      $args[0].assignmentVisible = 0, $schoolroomSlaves++, $SchlRiIDs.push({ID: _wID, Index: _wi})>>
<<case "spa" "rest in the spa">>
	<<set $args[0].assignment = "rest in the spa",              $args[0].assignmentVisible = 0, $spaSlaves++, $SpaiIDs.push({ID: _wID, Index: _wi})>>
<<case "cellblock" "be confined in the cellblock">>
	<<set $args[0].assignment = "be confined in the cellblock", $args[0].assignmentVisible = 0, $cellblockSlaves++, $CellBiIDs.push({ID: _wID, Index: _wi})>>
<<case "arcade" "be confined in the arcade">>
	<<set $args[0].assignment = "be confined in the arcade",    $args[0].assignmentVisible = 0, $arcadeSlaves++, $ArcadeiIDs.push({ID: _wID, Index: _wi})>>
<<case "brothel" "work in the brothel">>
	<<set $args[0].assignment = "work in the brothel",          $args[0].assignmentVisible = 0, $brothelSlaves++, $BrothiIDs.push({ID: _wID, Index: _wi})>>
<<case "club" "serve in the club">>
	<<set $args[0].assignment = "serve in the club",            $args[0].assignmentVisible = 0, $clubSlaves++, $ClubiIDs.push({ID: _wID, Index: _wi})>>
<<case "dairy" "work in the dairy">>
	<<set $args[0].assignment = "work in the dairy",            $args[0].assignmentVisible = 0, $dairySlaves++, $DairyiIDs.push({ID: _wID, Index: _wi})>>
	<<if $dairyPregSetting > 0>>
		<<set $reservedChildren -= $args[0].reservedChildren>>
		<<set $args[0].reservedChildren = 0>>
	<</if>>
<<case "hgsuite" "head girl suite" "live with your head girl">>
	<<set $args[0].assignment = "live with your Head Girl",     $args[0].assignmentVisible = 0, $HGSuiteSlaves++, $HGSuiteiIDs.push({ID: _wID, Index: _wi})>>
<<case "servantsquarters" "servants' quarters" "work as a servant">>
	<<set $args[0].assignment = "work as a servant",            $args[0].assignmentVisible = 0, $servantsQuartersSlaves++, $ServQiIDs.push({ID: _wID, Index: _wi})>>
<<case "mastersuite" "master suite" "serve in the master suite">>
	<<set $args[0].assignment = "serve in the master suite",    $args[0].assignmentVisible = 0, $masterSuiteSlaves++, $MastSiIDs.push({ID: _wID, Index: _wi})>>
<<case "be your agent" "live with your agent">>
	<<set $args[0].assignment = $args[1],                       $args[0].assignmentVisible = 0>>     /* removeJob already set choosesOwnAssignment = 0 */
<<case "choose her own job">>
	<<set $args[0].assignment = $args[1],                       $args[0].choosesOwnAssignment = 1>>  /* removeJob already set assignmentVisible = 1 */
<<default>>
	<<set $args[0].assignment = $args[1]>>                      /* removeJob already set assignmentVisible = 1 and choosesOwnAssignment = 0 */
<</switch>>

/% Stop creating Starving/overweight deaths?, Endless drug supply etc. %/
<<set $args[0].diet = "healthy", $args[0].drugs = "no drugs", $args[0].curatives = 0, $args[0].hormones = 0, $args[0].aphrodisiacs = 0>>

<<if _wID == $personalAttention>>
	<<if $PC.career == "escort">>
		<<set $personalAttention = "whoring">>
	<<elseif $PC.career == "servant">>
		<<set $personalAttention = "upkeep">>
	<<else>>
		<<set $personalAttention = "business">>
	<</if>>
<</if>>

<<set $slaves[_wi] = $args[0], $i = _wi>> /* save changes to slave array, and set $i in case we call "SA chooses own clothes" next, since it uses $slaves[$i] */

<<if $slaves[_wi].choosesOwnClothes == 1>><<include "SA chooses own clothes">><<set $args[0] = $slaves[_wi]>><</if>> /* update clothes, then update $args[0] */

<</if>> /* not Pit or Coursing Association */
<</widget>>

/%
	Call as <<removeJob slaveObject $returnto | _currentRule.facilityRemove | "serve in the master suite"
	$args[0] slave object. *MUST be present*
	$args[1] Job to remove slave from. Will accept the $returnto vars and the _currentRule.assignFacility vars and the actual job assignments "serve in the master suite" etc.

	This is basically a Widget version of Retrieve but will work anywhere, And it changes the assignment to "rest", and saves to the slaves[..] array, and changes your $args[0] var sent.
	Retrieve overrides the 'rest' in most cases.
%/
<<widget removeJob>>
<<if ($args[1] != "Pit") && ($args[1] != "Coursing Association")>>

<<set _wID = $args[0].ID, _SL = $slaves.length>>

<<if _wID == $HeadGirl.ID>><<set $HeadGirl = 0>><</if>>
<<if _wID == $Recruiter.ID>><<set $Recruiter = 0>><</if>>
<<if _wID == $Bodyguard.ID>><<set $Bodyguard = 0>><</if>>
<<if _wID == $Madam.ID>><<set $Madam = 0>><</if>>
<<if _wID == $DJ.ID>><<set $DJ = 0>><</if>>
<<if _wID == $Milkmaid.ID>><<set $Milkmaid = 0>><</if>>
<<if _wID == $Schoolteacher.ID>><<set $Schoolteacher = 0>><</if>>
<<if _wID == $Attendant.ID>><<set $Attendant = 0>><</if>>
<<if _wID == $Nurse.ID>><<set $Nurse = 0>><</if>>
<<if _wID == $Collectrix.ID>><<set $Collectrix = 0>><</if>>
<<if _wID == $Stewardess.ID>><<set $Stewardess = 0>><</if>>
<<if _wID == $Wardeness.ID>><<set $Wardeness = 0>><</if>>
<<if _wID == $Concubine.ID>><<set $Concubine = 0>><</if>>

/% use .toLowerCase() to get rid of a few dupe conditions. %/
<<switch $args[1].toLowerCase()>>
<<case "clinic" "get treatment in the clinic">>
	<<if _wID == $Nurse.ID>><<set $Nurse = 0>><</if>>
	<<set _Tcount = $CliniciIDs.length>>
	<<for _wi = 0; _wi < _Tcount; _wi++>>
		<<if _wID == $CliniciIDs[_wi].ID>>
			<<set _dump = $CliniciIDs.deleteAt(_wi), $clinicSlaves-->>
			<<break>>
		<</if>>
	<</for>>
<<case "schoolroom" "learn in the schoolroom">>
	<<if _wID == $Schoolteacher.ID>><<set $Schoolteacher = 0>><</if>>
	<<set _Tcount = $SchlRiIDs.length>>
	<<for _wi = 0; _wi < _Tcount; _wi++>>
		<<if _wID == $SchlRiIDs[_wi].ID>>
			<<set _dump = $SchlRiIDs.deleteAt(_wi), $schoolroomSlaves-->>
			<<break>>
		<</if>>
	<</for>>
<<case "spa" "rest in the spa">>
	<<if _wID == $Attendant.ID>><<set $Attendant = 0>><</if>>
	<<set _Tcount = $SpaiIDs.length>>
	<<for _wi = 0; _wi < _Tcount; _wi++>>
		<<if _wID == $SpaiIDs[_wi].ID>>
			<<set _dump = $SpaiIDs.deleteAt(_wi), $spaSlaves-->>
			<<break>>
		<</if>>
	<</for>>
<<case "cellblock" "be confined in the cellblock">>
	<<if _wID == $Wardeness.ID>><<set $Wardeness = 0>><</if>>
	<<set _Tcount = $CellBiIDs.length>>
	<<for _wi = 0; _wi < _Tcount; _wi++>>
		<<if _wID == $CellBiIDs[_wi].ID>>
			<<set _dump = $CellBiIDs.deleteAt(_wi), $cellblockSlaves-->>
			<<break>>
		<</if>>
	<</for>>
<<case "arcade" "be confined in the arcade">>
	<<set _Tcount = $ArcadeiIDs.length>>
	<<for _wi = 0; _wi < _Tcount; _wi++>>
		<<if _wID == $ArcadeiIDs[_wi].ID>>
			<<set _dump = $ArcadeiIDs.deleteAt(_wi), $arcadeSlaves-->>
			<<break>>
		<</if>>
	<</for>>
<<case "brothel" "work in the brothel">>
	<<if _wID == $Madam.ID>><<set $Madam = 0>><</if>>
	<<set _Tcount = $BrothiIDs.length>>
	<<for _wi = 0; _wi < _Tcount; _wi++>>
		<<if _wID == $BrothiIDs[_wi].ID>>
			<<set _dump = $BrothiIDs.deleteAt(_wi), $brothelSlaves-->>
			<<break>>
		<</if>>
	<</for>>
<<case "club" "serve in the club">>
	<<if _wID == $DJ.ID>><<set $DJ = 0>><</if>>
	<<set _Tcount = $ClubiIDs.length>>
	<<for _wi = 0; _wi < _Tcount; _wi++>>
		<<if _wID == $ClubiIDs[_wi].ID>>
			<<set _dump = $ClubiIDs.deleteAt(_wi), $clubSlaves-->>
			<<break>>
		<</if>>
	<</for>>
<<case "dairy" "work in the dairy">>
	<<if _wID == $Milkmaid.ID>><<set $Milkmaid = 0>><</if>>
	<<set _Tcount = $DairyiIDs.length>>
	<<for _wi = 0; _wi < _Tcount; _wi++>>
		<<if _wID == $DairyiIDs[_wi].ID>>
			<<set _dump = $DairyiIDs.deleteAt(_wi), $dairySlaves-->>
			<<break>>
		<</if>>
	<</for>>
<<case "hgsuite" "head girl suite" "live with your head girl">>
	<<set _Tcount = $HGSuiteiIDs.length>>
	<<for _wi = 0; _wi < _Tcount; _wi++>>
		<<if _wID == $HGSuiteiIDs[_wi].ID>>
			<<set _dump = $HGSuiteiIDs.deleteAt(_wi), $HGSuiteSlaves-->>
			<<break>>
		<</if>>
	<</for>>
<<case "servantsquarters" "servants' quarters" "work as a servant">>
	<<if _wID == $Stewardess.ID>><<set $Stewardess = 0>><</if>>
	<<set _Tcount = $ServQiIDs.length>>
	<<for _wi = 0; _wi < _Tcount; _wi++>>
		<<if _wID == $ServQiIDs[_wi].ID>>
			<<set _dump = $ServQiIDs.deleteAt(_wi), $servantsQuartersSlaves-->>
			<<break>>
		<</if>>
	<</for>>
<<case "mastersuite" "master suite" "serve in the master suite">>
	<<if _wID == $Concubine.ID>><<set $Concubine = 0>><</if>>
	<<set _Tcount = $MastSiIDs.length>>
	<<for _wi = 0; _wi < _Tcount; _wi++>>
		<<if _wID == $MastSiIDs[_wi].ID>>
			<<set _dump = $MastSiIDs.deleteAt(_wi), $masterSuiteSlaves-->>
			<<break>>
		<</if>>
	<</for>>
<</switch>>

<<set $args[0].assignmentVisible = 1, $args[0].assignment = "rest", $args[0].choosesOwnAssignment = 0, $args[0].sentence = 0>>

<<for _wi = 0; _wi < _SL; _wi++>>
<<if _wID == $slaves[_wi].ID>>
	<<set $slaves[_wi] = $args[0]>>
	<<break>>
<</if>>
<</for>>

<</if>>
<</widget>>
