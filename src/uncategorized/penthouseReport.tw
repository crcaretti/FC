:: Penthouse Report [nobr]

<<set _SL = $slaves.length>>

<<for $i = 0; $i < _SL; $i++>>
	<<if $slaves[$i].choosesOwnAssignment == 1>>
		''__@@.pink;$slaves[$i].slaveName@@__''
		<<include "SA chooses own job">> /* this calls <<SlavePronouns $slaves[$i]>> so we can use $pronounCap below */
		<<if $slaves[$i].assignmentVisible == 0>><br><br><</if>>
	<</if>>
	<<if $slaves[$i].assignmentVisible == 1>>
		<<if $slaves[$i].choosesOwnAssignment == 1>>
			$pronounCap
		<<else>>
			''__@@.pink;$slaves[$i].slaveName@@__''
		<</if>>
		<<include "Full Report">>
		<br><br>
		<<if ($slaves[$i].assignment == "be your Head Girl") && ($HGSuiteSlaves > 0)>>
			<<set _iTemp = $i, $i = $HGSuiteiIDs[0].Index, _ID = $HGSuiteiIDs[0].ID>>
			<<if $i >= _SL || _ID != $slaves[$i].ID>>
				/% Slaves.ID and $HGSuiteiIDs.ID's don't match-up so let's find her %/
				<<for $i = 0; $i < _SL; $i++>>
				<<if _ID == $slaves[$i].ID>>
					/% Correct the Index %/
					<<set $HGSuiteiIDs[0].Index = $i>>
					<<break>>
				<</if>>
				<</for>>
			<</if>>
			<<if $i < _SL && $slaves[$i].assignment != "live with your Head Girl">>
				<br>@@.red;$slaves[$i].slaveName had been assigned to live with your Head Girl, but this week she was assigned to $slaves[$i].assignment. She has been released to your penthouse for reassignment.@@
				<<removeJob $slaves[$i] "live with your head girl">>
			<<else>>
				<<set $HGRelease = 1>>
				<<include "SA live with HG">>
				<br><br>
			<</if>>
			/% Onward bound as normal %/
			<<set $i = _iTemp>>
		<</if>>
	<</if>> /* closes assignmentVisible == 1 */
<</for>>

