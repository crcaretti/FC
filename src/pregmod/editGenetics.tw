:: Edit Genetics [nobr]
<html>
<script type="text/x-template" id="birthFullNameTmpl">
	<% if(["Chinese", "Japanese", "Korean", "Cambodian", "Vietnamese", "Hungarian"].includes(s.nationality)) {
		%><% if(s.birthSurname || s.surname) {	%><%- s.birthSurname || s.surname%> <% } %><b><u><%- s.birthName || s.name %></u></b><%
	} else {
		%><b><u><%- s.birthName || s.name %></u></b><% if(s.birthSurname || s.surname) { %> <%- s.birthSurname || s.surname %><% } %><%
	} %>
</script>
<script type="text/x-template" id="currentFullNameTmpl">
	<% if(["Chinese", "Japanese", "Korean", "Cambodian", "Vietnamese", "Hungarian"].includes(s.nationality)) {
		%><% if(s.slaveSurname) {	%><%- s.slaveSurname %> <% } %><b><u><%- s.slaveName %></u></b><%
	} else {
		%><b><u><%- s.slaveName %></u></b><% if(s.slaveSurname) { %> <%- s.slaveSurname %><% } %><%
	} %>
</script>
<script type="text/x-template" id="nameButtonTmpl">
	<button class="slavepicker" data-slave="<%- s.ID %>" style="width: 100%"><%= tmpl.birthFullName(s) %></button>
</script>
<script type="text/x-template" id="geneDetailsTmpl">
	<table class="slave-genetic-details">
		<tr>
			<th>Given name(s)</th><td colspan="2"><%- s.birthName %></td>
			<th>Family name</th><td colspan="2"><%- s.birthSurname || '' %></td>
			<th>Karyotype</th><td><%- s.genes %> (<%= tmpl.toSex(s.genes) %>)</td>
		</tr>
		<tr>
			<th>Nationality</th><td colspan="2"><%- s.nationality %></td>
			<th>Ethnicity</th><td colspan="2"><%- s.race %></td>
			<th>Career</th><td><i><%- s.career ? s.career : '' %></i></td>
		</tr>
		<tr>
			<th>Father</th><td colspan="2"><%= tmpl.parentFullName(s.father) %></td>
			<th>Mother</th><td colspan="2"><%= tmpl.parentFullName(s.mother) %></td>
			<th>Age</th><td><%- tmpl.ageDesc(s) %></td>
		</tr>
		<% if(s.origin) { %><tr><td colspan="8"><i><%- s.origin %></td></i></tr><% } %>
		<% if(s.prestigeDesc) { %><tr><td colspan="8"><i><%- s.prestigeDesc %></td></i></tr><% } %>
		<% if(s.customDesc) { %><tr><td colspan="8"><i><%- s.customDesc %></td></i></tr><% } %>
		<% if(s.birthName !== s.slaveName || s.birthSurname !== s.slaveSurname) { %><tr><td colspan="8"><i>Currently called <%= tmpl.currentFullName(s) %></td></i></tr><% } %>
		<tr><td></td><td colspan="6"><hr></td><td></td></tr>
		<tr>
			<th>Skin</th><td><%- s.origSkin %></td>
			<th>Skin markings</th><td><%- s.markings %></td>
			<th>Eyes</th><td><%- s.origEye %></td>
			<th>Hair</th><td><%- s.origHColor %></td>
		</tr>
		<tr>
			<th>Height</th><td><%- s.height %> cm (<%= tmpl.toFeet(s.height) %>)</td>
			<th>Weight</th><td><%= tmpl.percent(s.weight) %></td>
			<th>Muscles</th><td><%= tmpl.percent(s.muscles) %></td>
		<td colspan="2"></td></tr>
		<tr>
			<th>Shoulders</th><td><%= tmpl.shouldersDesc(s.shoulders) %></td>
			<th>Waist</th><td><%= tmpl.percent(s.waist) %></td>
			<th>Hips</th><td><%= tmpl.hipsDesc(s.hips) %></td>
			<th>Rear</th><td><%= tmpl.buttDesc(s.butt) %></td>
		</tr>
		<tr>
			<th>Breasts</th><td><%- s.boobs %> cc (<%- tmpl.cupCat.cat(s.boobs) %>)</td>
			<th>Breast shape</th><td><%- s.boobShape %></td>
			<th>Nipples</th><td><%- s.nipples %></td>
			<th>Areolae</th><td><%- tmpl.areolaeDesc(s.areolae) %></td>
		</tr>
		<tr>
			<th>Face</th><td><%- tmpl.faceCat.cat(s.face) %> (<%= tmpl.percent(s.face) %>)</td>
			<th>Lips</th><td><%- tmpl.lipsCat.cat(s.lips) %> (<%= s.lips %>)</td>
			<th>Teeth</th><td><%- s.teeth %></td>
			<th>Voice</th><td><%- tmpl.voiceDesc(s.voice) %></td>
		</tr>
		<tr><td></td><td colspan="6"><hr></td><td></td></tr>
		<% if(s.vagina >= 0) { %>
		<tr>
			<th>Labia</th><td><%- tmpl.labiaDesc(s.labia) %></td>
			<th>Clitoris</th><td><%- tmpl.clitDesc(s.clit) %></td>
			<th>Ovaries</th><td><%= s.ovaries ? 'working <span class="green">&#x2714;</span>' : 'broken <span class="red">&#x2718;</span>' %></td>
			<th>Ovum type</th><td><%= s.eggType %></td>
		</tr>
		<% } %>
		<% if(s.dick > 0 || s.balls > 0) { %>
		<tr>
			<th>Penis</th><td><%- tmpl.penisDesc(s.dick) %></td>
			<th>Testes</th><td><%- tmpl.testesDesc(s.balls) %></td>
			<th>Prostate</th><td><%= s.prostate ? 'working <span class="green">&#x2714;</span>' : 'broken <span class="red">&#x2718;</span>' %></td>
			<th>Spermium type</th><td><%= s.ballType %></td>
		</tr>
		<% } %>
		<tr>
			<th>Hormonal</th><td><%- tmpl.hormonalCat.cat(s.hormoneBalance) %> (<%- s.hormoneBalance %>)</td>
			<th>Anal area</th><td><%- s.analArea %></td><td colspan="4"></td>
		</tr>
		<tr><td></td><td colspan="6"><hr></td><td></td></tr>
		<tr>
			<th>Intelligence</th><td><%= tmpl.intelligenceDesc(s.intelligence) %></td>
			<th>Behavioral</th><td><%= s.behavioralFlaw !== 'none' ? s.behavioralFlaw : s.behavioralQuirk %></td>
			<th>Sexual</th><td><%= s.sexualFlaw !== 'none' ? s.sexualFlaw : s.sexualQuirk %></td>
			<td colspan="2"></td>
		</tr>
		<% if(s.chem > 0 || s.addict > 0) { %>
			<tr>
				<td colspan="8"><%= tmpl.chemicalsDesc(s) %></td>
			</tr>
		<% } %>
	</table>
</script>
<script type="text/javascript">
	var tmpl = tmpl || {};
	tmpl.percent = function(n) {
		if(n > 0) { return '+' + Number(n).toFixed(0) + '%' };
		if(n == 0) { return '&plusmn;0%'; }
		return Number(n).toFixed(0) + '%';
	};
	tmpl.toFeet = function(n) {
		var realFeet = Number(n) / 30.48;
		var feet = Math.floor(realFeet);
		var inches = Math.round((realFeet - feet) * 12);
		return feet + "&prime;" + inches + '&Prime;';
	};
	tmpl.toSex = function(karyotype) {
		return {
			XX: 'female', XY: 'male',
			X: 'Turner syndrome female', X0: 'Turner syndrome female',
			XYY: 'XYY syndrome male', XXY: 'Klinefelter syndrome male', XXX: 'triple X syndrome female'
		}[String(karyotype).toUpperCase()] || 'unknown/not viable';
	};
	tmpl.ageDesc = function(slave) {
		var age = slave.actualAge + (slave.birthWeek + SugarCube.State.variables.week - slave.weekAcquired) / 52.0;
		var years = Math.floor(age);
		var months = Math.floor((age - years) * 12);
		return (years > 0 ? years + 'y ' + months + 'm' : months + 'm');
	};
	tmpl.shouldersDesc = function(s) {
		return ({'-2': 'very narrow', '-1': 'narrow', '0': 'feminine', '1': 'broad', '2': 'very broad'}[s] || 'unknown') + ' (' + Number(s) + ')';
	};
	tmpl.hipsDesc = function(s) {
		return ({'-2': 'very narrow', '-1': 'narrow', '0': 'normal', '1': 'wide', '2': 'very wide', '3': 'inhumanly wide'}[s] || 'unknown') + ' (' + Number(s) + ')';
	};
	tmpl.buttDesc = function(s) {
		return ({
			'0': 'flat', '1': 'small', '2': 'plump', '3': 'big', '4': 'huge', '5': 'enormous', '6': 'gigantic', '7': 'ridiculous',
			'8': 'immense', '9': 'immense', '10': 'immense', '11': 'inhuman', '12': 'inhuman', '13': 'inhuman', '14': 'inhuman',
			'15': 'inhuman', '16': 'inhuman', '17': 'inhuman', '18': 'inhuman', '19': 'inhuman', '20': 'inhuman'}[s] || 'unknown') + ' (' + Number(s) + ')';
	};
	tmpl.cupCat = new Categorizer([0, 'flat'], [300, 'A cup'], [400, 'B cup'], [500, 'C cup'], [650, 'D cup'], [800, 'DD cup'],
		[1000, 'F cup'], [1200, 'G cup'], [1400, 'H cup'], [1600, 'I cup'], [1800, 'J cup'], [2050, 'K cup'], [2300, 'L cup'],
		[2600, 'M cup'], [2900, 'N cup'], [3250, 'O cup'], [3600, 'P cup'], [3950, 'Q cup'], [4300, 'R cup'], [4700, 'S cup'],
		[5100, 'massive']);
	tmpl.areolaeDesc = function(s) {
		return ({'0': 'normal', '1': 'large', '2': 'unusually wide', '3': 'huge', '4': 'heart shaped', '5': 'star shaped'}[s] || 'unknown') + ' (' + Number(s) + ')';
	};
	tmpl.faceCat = new Categorizer(
		[-Infinity, 'very ugly'], [-95, 'ugly'], [-40, 'unattractive'],
		[-10, 'attractive'], [11, 'very pretty'], [41, 'gorgeous'], [96, 'mind blowing']);
	tmpl.lipsCat = new Categorizer([0, 'thin'], [11, 'normal'], [21, 'pretty'], [41, 'plush'], [71, 'huge'], [96, 'facepussy']);
	tmpl.voiceDesc = function(s) {
		return ({'0': 'mute', '1': 'deep', '2': 'feminine', '3': 'high'}[s] || 'unknown') + ' (' + Number(s) + ')';
	};
	tmpl.labiaDesc = function(s) {
		return ({'0': 'minimal', '1': 'big', '2': 'huge', '3': 'huge dangling'}[s] || 'unknown') + ' (' + Number(s) + ')';
	};
	tmpl.clitDesc = function(s) {
		return ({'0': 'normal', '1': 'large', '2': 'huge', '3': 'enormous', '4': 'penis-like', '5': 'like a massive penis'}[s] || 'unknown') + ' (' + Number(s) + ')';
	};
	tmpl.penisDesc = function(s) {
		return ({'0': 'none', '1': 'tiny', '2': 'little', '3': 'normal', '4': 'big', '5': 'huge', '6': 'gigantic',
			'7': 'gigantic', '8': 'titanic', '9': 'absurd', '10': 'inhuman', '11': 'hypertrophied'}[s] || 'unknown') + ' (' + Number(s) + ')';
	};
	tmpl.testesDesc = function(s) {
		return ({'0': 'none', '1': 'vestigal', '2': 'small', '3': 'average', '4': 'big', '5': 'huge', '6': 'enormous',
			'7': 'hypertrophied', '8': 'hypertrophied', '9': 'hypertrophied', '10': 'hypertrophied'}[s] || 'unknown') + ' (' + Number(s) + ')';
	};
	tmpl.hormonalCat = new Categorizer([-Infinity, 'heavy male'], [-49, 'male'], [-24, 'natural'], [25, 'female'], [50, 'heavy female']);
	tmpl.chemicalsDesc = function(slave) {
		var res = [];
		if(slave.chem > 0) {
			res.push('Immune system damaged (' + slave.chem.toFixed(0) + ').');
		}
		if(slave.addict > 0) {
			res.push('Addicted to aphrodisiaca (' + slave.addict.toFixed(0) + ').');
		}
		return res.join(' ');
	};
	tmpl.intelligenceDesc = function(s) {
		return ({
			'-3': 'borderline retarded', '-2': 'very slow', '-1': 'slow', '0': 'average',
			'1': 'smart', '2': 'very smart', '3': 'brilliant'}[s] || 'unknown') + ' (' + Number(s) + ')';
	};
	tmpl.birthFullName = _.template(jQuery('#birthFullNameTmpl').html(), {variable: 's'});
	tmpl.currentFullName = _.template(jQuery('#currentFullNameTmpl').html(), {variable: 's'});
	tmpl.parentFullName = function(id) {
		if(id === 0) { return '<i>unknown</i>'; }
		if(id === -1) {
			/* The PC */
			return tmpl.birthFullName(SugarCube.State.variables.PC) + ' (PC)';
		} else {
			var parent = SugarCube.State.variables.genePool.find(function(s) { return s.ID === id; });
			return (parent ? tmpl.birthFullName(parent) : '<i>missing</i>') + ' (' + id + ')';
		}
	};
	tmpl.nameButton = _.template(jQuery('#nameButtonTmpl').html(), {variable: 's'});
	tmpl.geneDetails = _.template(jQuery('#geneDetailsTmpl').html(), {variable: 's'});
</script>
</html>
<style>
button.selectedslave { background-color: #b84; }
table.slave-genetic-details { width: 100%; margin: 0 10px; border: 1px solid white; table-layout: fixed; font-size: 85%; }
table.slave-genetic-details td { vertical-align: top; }
table.slave-genetic-details th { vertical-align: top; background-color: rgba(127, 127, 127, 0.2); }
</style>
<div style="position: relative; width: 100%; height: 100%;">
	<div id="slaveList" style="width: 20em; float: left;"></div>
	<div id="geneDetails" style="position: fixed; left: 0; right: 0; top: 0; bottom: 0; margin-left: 40em; margin-right: 2.5em; margin-top: 2.5em;"></div>
</div>
<<script>>
	jQuery(function() {
		var slaveList = jQuery('#slaveList');
		_(State.variables.genePool).sortBy(['birthName', 'birthSurname']).forEach(function(s) {
			slaveList.append(tmpl.nameButton(s));
		});
		jQuery(document).off('.edit-genetics');
		jQuery(document).on('keyup.edit-genetics', function(e) {
			if(slaveList.is(':visible')) {
				var currentSelection = jQuery('button.selectedslave');
				switch(e.keyCode) {
					case 38: /* ArrowUp */
						if(currentSelection.length === 0) {
							slaveList.find('button').last().trigger('click');
						} else {
							currentSelection.prev().trigger('click');
						}
						break;
					case 40: /* ArrowDown */
						if(currentSelection.length === 0) {
							slaveList.find('button').first().trigger('click');
						} else {
							currentSelection.next().trigger('click');
						}
						break;
					default:
						/* do nothing */
						break;
				}
			}
		});
		var geneDetails = jQuery('#geneDetails');
		jQuery('.slavepicker').each(function() {
			var el = jQuery(this);
			var id = Number(el.attr('data-slave'));
			el.on('click', function() {
				jQuery('button.selectedslave').removeClass('selectedslave');
				el.addClass('selectedslave');
				geneDetails.html(tmpl.geneDetails(
					State.variables.genePool.find(function(s) { return s.ID === id; })
				));
			});
		});
	});
<</script>>