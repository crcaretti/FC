:: pregmod widgets [nobr widget] 
 
<<widget PMODinit>>
<<if ndef $args[0].actualAge>>
	<<set $args[0].actualAge to $args[0].age>>
<</if>>
<<if ndef $args[0].physicalAge>>
	<<set $args[0].physicalAge to $args[0].actualAge>>
<</if>>
<<if ndef $args[0].visualAge>>
	<<set $args[0].visualAge to $args[0].actualAge>>
<</if>>
<<if ndef $args[0].age>>
	<<set $args[0].age to $args[0].actualAge>>
<</if>>
<<if ndef $args[0].boobsImplantType>>
  <<set $args[0].boobsImplantType to 0>>
<</if>>
<<if ndef $args[0].buttImplantType>>
  <<set $args[0].buttImplantType to 0>>
<</if>>
<<if ndef $args[0].bellyTat>>
  <<set $args[0].bellyTat to 0>>
<</if>>
<<if ndef $args[0].cSec>>
  <<set $args[0].cSec to 0>>
<</if>>
<<if ndef $args[0].labor>>
  <<set $args[0].labor to 0>>
<</if>>
<<if ndef $args[0].induce>>
  <<set $args[0].induce to 0>>
<</if>>
<<if ndef $args[0].mpreg>>
  <<set $args[0].mpreg to 0>>
<</if>>
<<if ndef $args[0].inflation>>
  <<set $args[0].inflation to 0>>
<</if>>
<<if ndef $args[0].inflationType>>
  <<set $args[0].inflationType to "none">>
<</if>>
<<if ndef $args[0].inflationMethod>>
  <<set $args[0].inflationMethod to 0>>
<</if>>
<<if ndef $args[0].milkSource>>
  <<set $args[0].milkSource to 0>>
<</if>>
<<if ndef $args[0].cumSource>>
  <<set $args[0].cumSource to 0>>
<</if>>
<<if ndef $args[0].burst>>
  <<set $args[0].burst to 0>>
<</if>>
<<if ndef $args[0].bellyImplant>>
  <<set $args[0].bellyImplant to 0>>
<</if>>
<<if ndef $args[0].bellySag>>
  <<set $args[0].bellySag to 0>>
<</if>>
<<if ndef $args[0].birthsTotal>>
  <<set $args[0].birthsTotal to $args[0].births>>
<</if>>
<<if ndef $args[0].pubertyAgeXX>>
  <<set $args[0].pubertyAgeXX to $fertilityAge>>
<</if>>
<<if ndef $args[0].bellyPain>>
	<<set $args[0].bellyPain = 0>>
<</if>>
<<if ndef $args[0].scars>>
	<<set $args[0].scars = 0>>
<</if>>
<<if ndef $args[0].breedingMark>>
	<<set $args[0].breedingMark = 0>>
<</if>>
<<if ndef $args[0].underArmHColor>>
	<<set $args[0].underArmHColor to $args[0].hColor>>
<</if>>
<<if ndef $args[0].underArmHStyle>>
	<<set $args[0].underArmHStyle to "waxed">>
<</if>>
<<if ndef $args[0].prostateImplant>>
	<<set $args[0].prostateImplant to 0>>
<</if>>
<<if ndef $args[0].bodySwap>>
	<<set $args[0].bodySwap = 0>>
<</if>>
<<if ndef $args[0].father>>
	<<set $args[0].father to 0>>
<</if>>
<<if ndef $args[0].mother>>
	<<set $args[0].mother to 0>>
<</if>>
<<if ndef $args[0].daughters>>
	<<set $args[0].daughters to 0>>
<</if>>
<<if ndef $args[0].sisters>>
	<<set $args[0].sisters to 0>>
<</if>>
<<if ndef $args[0].canRecruit>>
	<<set $args[0].canRecruit to 0>>
<</if>>
<<if ndef $args[0].ballType>>
	<<set $args[0].ballType to "human">>
<</if>>
<<if ndef $args[0].eggType>>
	<<set $args[0].eggType to "human">>
<</if>>
<<if ndef $args[0].HGExclude>>
	<<set $args[0].HGExclude to 0>>
<</if>>

<<if ndef $args[0].pubertyXX>>
	<<if $args[0].physicalAge >= $args[0].pubertyAgeXX>>
		<<set $args[0].pubertyXX = 1>>
	<<else>>
		<<set $args[0].pubertyXX = 0>>
	<</if>>
<</if>>
<<if ndef $args[0].pubertyAgeXY>>
  <<set $args[0].pubertyAgeXY to $potencyAge>>
<</if>>
<<if ndef $args[0].pubertyAgeXY>>
	<<if $args[0].physicalAge >= $args[0].pubertyAgeXY>>
		<<set $args[0].pubertyXY = 1>>
	<<else>>
		<<set $args[0].pubertyXY = 0>>
	<</if>>
<</if>>
<</widget>>

<<widget AgeImplantAdjustment>>
	<<if $activeSlave.visualAge > 80>>
		<<set $activeSlave.visualAge -= 40>>
	<<elseif $activeSlave.visualAge >= 70>>
		<<set $activeSlave.visualAge -= 30>>
	<<elseif $activeSlave.visualAge > 50>>
		<<set $activeSlave.visualAge -= 20>>
	<<elseif $activeSlave.visualAge > 36>>
		<<set $activeSlave.visualAge -= 10>>
	<<else>>
		<<set $activeSlave.visualAge -= 5>>
	<</if>>
<</widget>>

<<widget InitStandards>>

<<set $activeStandard to {age: 24, weight: 0, muscles: 0, raceSup: "white", raceSub: "white", boobs: 0, boobsImplant: 0, lactation: 0, hips: 0, hipsImplant: 0, butt: 0, buttImplant: 0, face: 0, faceImplant: 0, lips: 15, lipsImplant: 0, chem: 0, addict: 0, intelligence: 0, intelligenceImplant: 0, bellyImplant: 0, beauty: 0, dick: 0, balls: 0, health: 0}>>

<<UpdateStandards>>
<<BreedingStandards>>
<</widget>>

<<widget UpdateStandards>>
<<if $failedElite > 100>>
	<<set $activeStandard.intelligence = 3>>
	<<set $activeStandard.beauty = 120>>
	<<set $activeStandard.face = 3>>
<<else>>
	<<set $activeStandard.intelligence = 2>>
	<<set $activeStandard.beauty = 100>>
	<<set $activeStandard.face = 2>>
<</if>>
<<set $activeStandard.chem = 20>>
<<set $activeStandard.addict = 0>>
<<if $arcologies[0].FSSupremacist > 20>>
	<<set $activeStandard.raceSup = $arcologies[0].FSSupremacistRace>>
<</if>>
<<if $arcologies[0].FSSubjugationist > 20>>
	<<set $activeStandard.raceSub = $arcologies[0].FSSubjugationistRace>>
<</if>>
<<if $arcologies[0].FSGenderRadicalist > 20>>
	<<set $activeStandard.dick = 1>>
	<<set $activeStandard.balls = 1>>
<<elseif $arcologies[0].FSGenderFundamentalist > 20>>
	<<set $activeStandard.dick = 0>>
	<<set $activeStandard.balls = 0>>
<</if>>
<<if $arcologies[0].FSPaternalist > 20>>
	<<set $activeStandard.intelligenceImplant = 1>>
	<<set $activeStandard.health = 60>>
<<elseif $arcologies[0].FSDegradationist > 20>>
	<<set $activeStandard.intelligenceImplant = 0>>
	<<set $activeStandard.health = 0>>
<</if>>
<<if $arcologies[0].FSBodyPurist > 20>>
	<<set $activeStandard.chem = 0>>
	<<set $activeStandard.boobsImplant = 0>>
	<<set $activeStandard.buttImplant = 0>>
	<<set $activeStandard.lipsImplant = 0>>
	<<set $activeStandard.hipsImplant = 0>>
	<<set $activeStandard.shouldersImplant = 0>>
	<<set $activeStandard.faceImplant = 0>>
	<<set $activeStandard.bellyImplant = 0>>
<<elseif $arcologies[0].FSTransformationFetishist > 20>>
	<<set $activeStandard.chem = 20>>
<</if>>
<<if $arcologies[0].FSSlimnessEnthusiast > 20>>
	<<set $activeStandard.weight = 0>>
	<<set $activeStandard.butt = 2>>
	<<set $activeStandard.boobs = 400>>
<<elseif $arcologies[0].FSAssetExpansionist > 20>>
	<<set $activeStandard.butt = 6>>
	<<set $activeStandard.boobs = 1000>>
<</if>>
<<if $arcologies[0].FSPastoralist > 20>>
	<<set $activeStandard.lactation = 1>>
<<elseif $arcologies[0].FSPhysicalIdealist > 20>>
	<<set $activeStandard.muscles = 95>>
<</if>>
<</widget>>

<<widget BreedingStandards>>
<br><br>
In order to be eligible to be bred, the potential breeding bitch must first satisfy the following conditions:
<<if $failedElite > 100>>
	<br>She must be of finest intelligence.
	<br>She must be unbelieveably beautiful.
	<br>Her face must be breathtaking.
<<else>>
	<br>She must be very smart.
	<br>She must be beautiful.
	<br>Her face must be gorgeous.
<</if>>
<br>Her health must not be overly impacted by drug use.
<br>She must not be addicted to drugs.
<<if $arcologies[0].FSSupremacist > 20>>
	<br>She must be $arcologies[0].FSSupremacistRace.
<</if>>
<<if $arcologies[0].FSSubjugationist > 20>>
	<br>She must not be $arcologies[0].FSSubjugationistRace.
<</if>>
<<if $arcologies[0].FSGenderRadicalist > 20>>
	<br>She must be have a functional penis.
<<elseif $arcologies[0].FSGenderFundamentalist > 20>>
	<br>She must be a natural female.
<</if>>
<<if $arcologies[0].FSPaternalist > 20>>
	<br>She must be educated.
	<br>She must be in good health.
<</if>>
<<if $arcologies[0].FSBodyPurist > 20>>
	<br>Her genome must be damage free.
	<br>She must be implant free.
<<elseif $arcologies[0].FSTransformationFetishist > 20>>
	<<set $activeStandard.chem = 20>>
<</if>>
<<if $arcologies[0].FSMaturityPreferentialist > 20>>
	<br>She must be older than 24.
<<elseif $arcologies[0].FSYouthPreferentialist > 20>>
	<br>She must be younger than 24.
<</if>>
<<if $arcologies[0].FSSlimnessEnthusiast > 20>>
	<br>She must be thin.
	<br>She must have a trim rear.
	<br>She must have a sleek chest.
<<elseif $arcologies[0].FSAssetExpansionist > 20>>
	<br>She must have a naturally gigantic rear.
	<br>She must be naturally busty.
<</if>>
<<if $arcologies[0].FSPastoralist > 20>>
	<br>She must be lactating naturally.
<<elseif $arcologies[0].FSPhysicalIdealist > 20>>
	<br>She must be extremely muscular.
<</if>>
<br>For each slave examined, a fee of @@color:yellowgreen;Â¤5000@@ will be deducted from your account.
<br>Failures will promptly be sterilized. Please make sure your slave fits the criteria before submitting them for testing. We shall not be held responsible for time wasted.
<br>Updates will periodically be posted. It is your responsibility to keep up to date with current standards.
<</widget>>

<<widget BreedingEligibility>>
<<set $passing = 0>>
<<set $useActiveSlave to 1>>
<br><br>
$activeSlave.slaveName is up for review:
<<if $activeSlave.intelligence >= $activeStandard.intelligence>>
	<br>She @@color:lime;PASSED@@ the intelligence test.
<<else>>
	<br>She @@color:red;FAILED@@ the intelligence test.
	<<set $passing-->>
<</if>>
<<if $beauty >= $activeStandard.beauty>>
	<br>She @@color:lime;PASSED@@ the beauty test.
<<else>>
	<br>She @@color:red;FAILED@@ the beauty test.
	<<set $passing-->>
<</if>>
<<if $activeSlave.face >= $activeStandard.face>>
	<br>She @@color:lime;PASSED@@ the facial attractiveness test.
<<else>>
	<br>She @@color:red;FAILED@@ the facial attractiveness test.
	<<set $passing-->>
<</if>>
<<if $activeSlave.chem <= $activeStandard.chem>>
	<br>She @@color:lime;PASSED@@ the genome damage test.
<<else>>
	<br>She @@color:red;FAILED@@ the genome damage test.
	<<set $passing-->>
<</if>>
<<if $activeSlave.addict >= $activeStandard.addict>>
	<br>She @@color:lime;PASSED@@ the drug test.
<<else>>
	<br>She @@color:red;FAILED@@ the drug test.
	<<set $passing-->>
<</if>>
<<if $arcologies[0].FSSupremacist > 20>>
	<<if $activeSlave.race == $activeStandard.raceSup>>
		<br>She @@color:lime;PASSED@@ racial testing.
	<<else>>
		<br>She @@color:red;FAILED@@ racial testing.
		<<set $passing-->>
	<</if>>
<</if>>
<<if $arcologies[0].FSSubjugationist > 20>>
	<<if $activeSlave.race != $activeStandard.raceSub>>
		<br>She @@color:lime;PASSED@@ racial testing.
	<<else>>
		<br>She @@color:red;FAILED@@ racial testing.
		<<set $passing-->>
	<</if>>
<</if>>
<<if $arcologies[0].FSGenderRadicalist > 20>>
	<<if $activeSlave.dick >= $activeStandard.dick && $activeSlave.balls >= $activeStandard.balls>>
		<br>She @@color:lime;PASSED@@ penis inspection.
	<<else>>
		<br>She @@color:red;FAILED@@ penis inspection.
		<<set $passing-->>
	<</if>>
<<elseif $arcologies[0].FSGenderFundamentalist > 20>>
	<<if $activeSlave.dick == $activeStandard.dick && $activeSlave.balls == $activeStandard.balls>>
		<br>She @@color:lime;PASSED@@ genital inspection.
	<<else>>
		<br>She @@color:red;FAILED@@ genital inspection.
		<<set $passing-->>
	<</if>>
<</if>>
<<if $arcologies[0].FSPaternalist > 20>>
	<<if $activeSlave.intelligenceImplant == $activeStandard.intelligenceImplant>>
		<br>She @@color:lime;PASSED@@ educational trials.
	<<else>>
		<br>She @@color:red;FAILED@@ educational trials.
		<<set $passing-->>
	<</if>>
	<<if $activeSlave.health >= $activeStandard.health>>
		<br>She @@color:lime;PASSED@@ health examinations.
	<<else>>
		<br>She @@color:red;FAILED@@ health examinations.
		<<set $passing-->>
	<</if>>
<</if>>
<<if $arcologies[0].FSBodyPurist > 20>>
	<<if $activeSlave.health >= $activeStandard.health>>
		<br>She @@color:lime;PASSED@@ health examinations.
	<<else>>
		<br>She @@color:red;FAILED@@ health examinations.
		<<set $passing-->>
	<</if>>
	<<if $activeSlave.boobsImplant == 0 && $activeSlave.buttImplant == 0 && $activeSlave.lipsImplant == 0 && $activeSlave.hipsImplant == 0 && $activeSlave.shouldersImplant == 0 && $activeSlave.faceImplant == 0 && $activeSlave.bellyImplant == 0>>
		<br>She @@color:lime;PASSED@@ implant examinations.
	<<else>>
		<br>She @@color:red;FAILED@@ implant examinations.
		<<set $passing-->>
	<</if>>
<</if>>
<<if $arcologies[0].FSMaturityPreferentialist > 20>>
	<<if $activeSlave.physicalAge > $activeStandard.age>>
		<br>She @@color:lime;PASSED@@ age examinations.
	<<else>>
		<br>She @@color:red;FAILED@@ age examinations.
		<<set $passing-->>
	<</if>>
<<elseif $arcologies[0].FSYouthPreferentialist > 20>>
	<<if $activeSlave.physicalAge < $activeStandard.age>>
		<br>She @@color:lime;PASSED@@ age examinations.
	<<else>>
		<br>She @@color:red;FAILED@@ age examinations.
		<<set $passing-->>
	<</if>>
<</if>>
<<if $arcologies[0].FSSlimnessEnthusiast > 20>>
	<<if $activeSlave.weight <= $activeStandard.weight>>
		<br>She @@color:lime;MET@@ weight limits.
	<<else>>
		<br>She @@color:red;EXCEEDED@@ weight mimits.
		<<set $passing-->>
	<</if>>
	<<if $activeSlave.butt  <= $activeStandard.butt>>
		<br>She @@color:lime;MET@@ ass measurements.
	<<else>>
		<br>She @@color:red;EXCEEDED@@ ass measurements.
		<<set $passing-->>
	<</if>>
	<<if $activeSlave.boobs <= $activeStandard.boobs>>
		<br>She @@color:lime;MET@@ chest measurements.
	<<else>>
		<br>She @@color:red;EXCEEDED@@ chest measurements.
		<<set $passing-->>
	<</if>>
<<elseif $arcologies[0].FSAssetExpansionist > 20>>
	<<if ($activeSlave.butt - $activeSlave.buttImplant) >= $activeStandard.butt>>
		<br>She @@color:lime;MET@@ ass measurements.
	<<else>>
		<br>She @@color:red;FAILED@@ to meet ass measurements.
		<<set $passing-->>
	<</if>>
	<<if ($activeSlave.boobs - $activeSlave.boobsImplant) >= $activeStandard.boobs>>
		<br>She @@color:lime;MET@@ chest measurements.
	<<else>>
		<br>She @@color:red;FAILED@@ to meet chest measurements.
		<<set $passing-->>
	<</if>>
<</if>>
<<if $arcologies[0].FSPastoralist > 20>>
	<<if $activeSlave.lactation == $activeStandard.lactation>>
		<br>She @@color:lime;MET@@ milk production standards.
	<<elseif $activeSlave.lactation > $activeStandard.lactation>>
		<br>She @@color:red;EXCEEDED@@ milk production standards.
		<<set $passing-->>
	<<else>>
		<br>She @@color:red;FAILED@@ to meet milk production standards.
		<<set $passing-->>
	<</if>>
<<elseif $arcologies[0].FSPhysicalIdealist > 20>>
	<<if $activeSlave.muscles > $activeStandard.muscles>>
		<br>She @@color:lime;MET@@ the required muscle mass.
	<<else>>
		<br>She @@color:red;FAILED@@ to meet the required muscle mass.
		<<set $passing-->>
	<</if>>
<</if>>
<br><br>
<<if $passing != 0>>
	The slave known as "<<print $activeSlave.slaveName>>" has been deemed @@color:red;unsuitable@@ for breeding and has been @@color:green;sterilized@@ as per agreement.
	<<set $activeSlave.preg = -3>>
<<else>>
	The slave known as "<<print $activeSlave.slaveName>>" has been deemed @@color:green;worthy@@ of being used for breeding and has been marked as such. Please note the increased restrictions on breeding slaves.
	<br>They are not permitted for public use or anything that may harm their growing child. The child within them is considered a member of the elite class and a such, any harm that comes to them will result in severe penalties to the breeder's owner. Development of the child will be closely monitored; should the fetus be identified as of not the owner's blood (or any other member of the Elite class), said owner shall face severe fines.
	<<set $activeSlave.breedingMark = 1>>
<</if>>
<br>@@color:yellowgreen;Â¤5000@@ has been deducted from your account as agreed.
<<set $activeSlave.assignment = "rest">>
<</widget>>

<<widget "PlayerRace">>
	<<replace #ethnicity>>
		I'm $PC.race.
	<</replace>>
<</widget>>

<<widget "PlayerSkin">>
	<<replace #skin>>
		I have $PC.skin skin.
	<</replace>>
<</widget>>

<<widget "ResyncHeight">>

<<switch $activeSlave.actualAge>>
<<case 3>>
	<<set $activeSlave.height = random(91,96)>>
<<case 4>>
	<<set $activeSlave.height = random(97,104)>>
<<case 5>>
	<<set $activeSlave.height = random(104,111)>>
<<case 6>>
	<<set $activeSlave.height = random(112,119)>>
<<case 7>>
	<<set $activeSlave.height = random(118,126)>>
<<case 8>>
	<<set $activeSlave.height = random(124,132)>>
<<case 9>>
	<<set $activeSlave.height = random(129,137)>>
<<case 10>>
	<<set $activeSlave.height = random(133,142)>>
<<case 11>>
	<<set $activeSlave.height = random(140,149)>>
<<case 12>>
	<<set $activeSlave.height = random(147,156)>>
<<case 13>>
	<<set $activeSlave.height = random(152,162)>>
<<case 14>>
	<<set $activeSlave.height = random(156,165)>>
<<case 15>>
	<<set $activeSlave.height = random(157,166)>>
<<default>>
	<<set $activeSlave.height = random(159,167)>>
<</switch>>

<</widget>>

<<widget "BodyguardWeapon">>

<<if ($activeSlave.muscles+$activeSlave.height-100)/25 > 5>>
    She has a long ceramic sword strapped to her back,
	<<switch $activeSlave.nationality>>
	<<case "Uzbek" "Kazakh" "Belarusian" "Armenian" "Hungarian" "Cuban">>
		and, in keeping with her heritage, a PKM GPMG
	<<case "Russian">>
		and, in keeping with her heritage, a PKP Pecheneg GPMG
	<<case "Ukrainian">>
		and, in keeping with her heritage, a Fort-401 LMG
	<<case "American">>
		and, in keeping with her heritage, a US Ordnance Mk43 Mod.1 GPMG
	<<case "Canadian">>
		and, in keeping with her heritage, a Colt Canada 5.56-LSW LMG
	<<case "British" "Scottish">>
		and, in keeping with her heritage, an L7A2 GPMG
	<<case "Japanese">>
		and, in keeping with her heritage, a Sumitomo Type 62 GPMG
	<<case "Belgian">>
		and, in keeping with her heritage, a FN Minimi M3 LMG
	<<case "Israeli">>
		and, in keeping with her heritage, an IWI Negev NG7 GPMG
	<<case "German" "Chilean">>
		and, in keeping with her heritage, a Rheinmetall MG3 GPMG
	<<case "Mexican">>
		and, in keeping with her heritage, a SEDENA MG-21 GPMG
	<<case "Spanish">>
		and, in keeping with her heritage, a CETME MG 82 Ameli LMG
	<<case "Australian">>
		and, in keeping with her heritage, a Lithgow F89 Maximi GPMG
	<<case "Chinese">>
		and, in keeping with her heritage, a Norinco QJY-88 LMG
	<<case "French">>
		and, in keeping with her heritage, a MAS AAT-F1 GPMG
	<<case "Korean">>
		and, in keeping with her heritage, a S&T K12 GPMG 
	<<case "South African">>
		and, in keeping with her heritage, a Vektor SS-77 GPMG
	<<case "Finnish">>
		and, in keeping with her heritage, a Valmet KvKK 62 LMG
	<<case "Polish">>
		and, in keeping with her heritage, a ZMT UKM-2000 GPMG
	<<case "Swiss">>
		and, in keeping with her heritage, a W+F-Bern MG51 GPMG
	<<case "Austrian">>
		and, in keeping with her heritage, a Steyr MG 74 GPMG
	<<case "Zimbabwean">>
		<<if $activeSlave.race == "white">>
			and, in keeping with her heritage, a FN MAG-58 GPMG
		<<else>>
			and a FN MAG 60.20 GPMG
		<</if>>
	<<case "Czech" "Slovak">>
		and, in keeping with her heritage, a ZVI Uk vz.59 Rachot GPMG
	<<case "Indonesian">>
		and, in keeping with her heritage, a Pindad SM2 LMG
	<<case "Indian">>
		and, in keeping with her heritage, a OFB MG 2A1 GPMG
	<<case "Turkish">>
		and, in keeping with her heritage, a MKEK MG3 GPMG
	<<case "Iranian">>
		and, in keeping with her heritage, a DIO MGA3 GPMG
	<<case "Vietnamese">>
		and, in keeping with her heritage, a Z111 RPK LMG
	<<case "Filipina">>
		and, in keeping with her heritage, a Government Arsenal M60E4 GPMG
	<<case "Serbian">>
		and, in keeping with her heritage, a Zastava M09 LMG
	<<case "Romanian">>
		and, in keeping with her heritage, a FACSA PM md.93 LMG
	<<default>>
		and a FN MAG 60.20 GPMG
	<</switch>>
	slung crosswise on her chest.
<<elseif ($activeSlave.muscles+$activeSlave.height-100)/25 > 4>>
    She has a ceramic sword strapped to her back
	<<switch $activeSlave.nationality>>
	<<case "Uzbek" "Kazakh" "Belarusian" "Armenian">>
		and, in keeping with her heritage, a Kalashnikov AK-74M assault rifle
	<<<case "Russian">>
		and, in keeping with her heritage, a Izhmash AN-94 Abakan assault rifle
	<<case "Ukrainian">>
		and, in keeping with her heritage, a Fort-227 assault rifle
	<<case "American">>
		and, in keeping with her heritage, a Colt M16A4 assault rifle
	<<case "Canadian">>
		and, in keeping with her heritage, a Colt Canada MRR assault rifle
	<<case "Japanese">>
		and, in keeping with her heritage, a Howa Type 89 assault rifle
	<<case "British" "Scottish">>
		and, in keeping with her heritage, an L85A3 bullpup assault rifle
	<<case "Belgian">>
		and, in keeping with her heritage, a FN FNC M2 assault rifle
	<<case "Israeli">>
		and, in keeping with her heritage, an IWI MTAR-21 bullpup assault rifle
	<<case "German">>
		and, in keeping with her heritage, a H&K G36A2 assault rifle
	<<case "Mexican">>
		and, in keeping with her heritage, a DGIM FX-05 Xiuhcoatl assault rifle
	<<case "Spanish">>
		and, in keeping with her heritage, a CETME Model C battle rifle
	<<case "Cuban">>
		and, in keeping with her heritage, an AKM assault rifle
	<<case "Australian">>
		and, in keeping with her heritage, a Lithgow EF88 Austeyr bullpup assault rifle
	<<case "Chinese">>
		and, in keeping with her heritage, a Norinco QBZ-95-1 bullpup assault rifle
	<<case "French">>
		and, in keeping with her heritage, a Nexter FAMAS G2 bullpup assault rifle
	<<case "Italian">>
		and, in keeping with her heritage, a Beretta ARX-160 assault rifle
	<<case "Korean">>
		and, in keeping with her heritage, a Daewoo K2C1 assault rifle
	<<case "South African">>
		and, in keeping with her heritage, a Vektor R4 assault rifle
	<<case "Swedish">>
		and, in keeping with her heritage, a Bofors Ak-5C assault rifle
	<<case "Finnish">>
		and, in keeping with her heritage, a SAKO Rk 95 TP assault rifle
	<<case "Colombian">>
		and, in keeping with her heritage, a Indumil ACE 22 assault rifle
	<<case "Polish">>
		and, in keeping with her heritage, a FB MSBS assault rifle
	<<case "Swiss">>
		and, in keeping with her heritage, a SIG SG 550 assault rifle
	<<case "Austrian">>
		and, in keeping with her heritage, a Steyr AUG A3 bullpup assault rifle
	<<case "Zimbabwean">>
		<<if $activeSlave.race == "white">>
			and, in keeping with her heritage, a FN FAL battle rifle
		<<else>>
			and a FN F2000 bullpup assault rifle
		<</if>>
	<<case "Czech" "Slovak">>
		and, in keeping with her heritage, a CZUB CZ-806 BREN-2 assault rifle
	<<case "Indonesian">>
		and, in keeping with her heritage, a Pindad SS2 assault rifle
	<<case "Indian">>
		and, in keeping with her heritage, a OFB MCIWS assault rifle
	<<case "Turkish">>
		and, in keeping with her heritage, a MKEK MPT-76 assault rifle
	<<case "Iranian">>
		and, in keeping with her heritage, a DIO KH-2002 Khaybar bullpup assault rifle
	<<case "Vietnamese">>
		and, in keeping with her heritage, a Z111 AKM assault rifle
	<<case "Filipina">>
		and, in keeping with her heritage, a Elitool M653P carbine
	<<case "Thai">>
		and, in keeping with her heritage, a MND Type 11 assault rifle
	<<case "Brazilian">>
		and, in keeping with her heritage, a IMBEL IA2 assault rifle
	<<case "Argentinian">>
		and, in keeping with her heritage, a FMAP FARA-83 assault rifle
	<<case "Peruvian">>
		and, in keeping with her heritage, a SIMA FAD bullpup assault rifle
	<<case "Chilean">>
		and, in keeping with her heritage, a FAMAE ACE 22NC assault rifle
	<<case "Serbian">>
		and, in keeping with her heritage, a Zastava M21A assault rifle
	<<case "Croatian">>
		and, in keeping with her heritage, an HS Produkt VHS-2 bullpup assault rifle
	<<case "Hungarian">>
		and, in keeping with her heritage, a FEG AMD-65M assault rifle
	<<case "Romanian">>
		and, in keeping with her heritage, a ROMARM PA md.86 assault rifle
	<<default>>
		and a FN F2000 bullpup assault rifle
	<</switch>>
	slung across her chest.
<<elseif ($activeSlave.muscles+$activeSlave.height-100)/25 > 3>>
    She has a straight ceramic sword strapped to her back
	<<switch $activeSlave.nationality>>
	<<case "Uzbek" "Kazakh" "Belarusian" "Armenian">>
		and, in keeping with her heritage, an Kalashnikov AKS-74U PDW
	<<case "Russian">>
		and, in keeping with her heritage, a KBP PP-90M1 SMG
	<<case "Ukrainian">>
		and, in keeping with her heritage, a Fort-224 bullpup SMG
	<<case "American">>
		and, in keeping with her heritage, a KRISS Vector SMG
	<<case "British" "Scottish">>
		and, in keeping with her heritage, an L91A1 SMG
	<<case "Belgian">>
		and, in keeping with her heritage, a FN P90 bullpup PDW
	<<case "Israeli">>
		and, in keeping with her heritage, an IWI Uzi SMG
	<<case "German">>
		and, in keeping with her heritage, an H&K MP7A1 PDW
	<<case "Mexican">>
		and, in keeping with her heritage, a Mendoza Cobra SMG
	<<case "Spanish">>
		and, in keeping with her heritage, a Star Z84 SMG
	<<case "Chinese">>
		and, in keeping with her heritage, a Norinco QCQ-05 SMG
	<<case "Italian">>
		and, in keeping with her heritage, a Beretta MX4 SMG
	<<case "Korean">>
		and, in keeping with her heritage, a Daewoo K1A PDW
	<<case "South African">>
		and, in keeping with her heritage, a Milkor BXP SMG
	<<case "Swedish">>
		and, in keeping with her heritage, a Carl Gustav m/45 SMG
	<<case "Polish">>
		and, in keeping with her heritage, a FB PM-06 Glauberyt SMG
	<<case "Swiss">>
		and, in keeping with her heritage, a SIG MPX SMG
	<<case "Austrian">>
		and, in keeping with her heritage, a Steyr AUG A3 Para XS bullpup SMG
	<<case "Zimbabwean">>
		<<if $activeSlave.race == "white">>
			and, in keeping with her heritage, a Sterling Mk.IV SMG
		<<else>>
			and a H&K MP5 SMG
		<</if>>
	<<case "Indonesian">>
		and, in keeping with her heritage, a Pindad PM1A1 SMG
	<<case "Indian">>
		and, in keeping with her heritage, a OFB MSMC SMG
	<<case "Turkish">>
		and, in keeping with her heritage, a Sarsilmaz SAR 109 SMG
	<<case "Iranian">>
		and, in keeping with her heritage, a DIO MPT-9 Tondar SMG
	<<case "Vietnamese">>
		and, in keeping with her heritage, a Z111 K-50M LMG
	<<case "Filipina">>
		and, in keeping with her heritage, a Ferfrans SCW7 PDW
	<<case "Brazilian">>
		and, in keeping with her heritage, a Taurus MT40 G2 SMG
	<<case "Argentinian">>
		and, in keeping with her heritage, a Halcon ML-63 SMG
	<<case "Chilean">>
		and, in keeping with her heritage, a FAMAE SAF-200 SMG
	<<case "Serbian">>
		and, in keeping with her heritage, a Zastava Master FLG SMG
	<<case "Croatian">>
		and, in keeping with her heritage, a PM Agram 2000 SMG
	<<case "Romanian">>
		and, in keeping with her heritage, a UM Cugir LP7 SMG
	<<default>>
		and a H&K MP5 SMG
	<</switch>>
	slung across her chest.
<<else>>
    She has a short ceramic sword strapped to her back
	<<switch $activeSlave.nationality>>
	<<case "Uzbek" "Kazakh" "Belarusian" "Armenian" "Ukrainian" "Cuban">>
		and, in keeping with her heritage, a Molot Ordnance Stechkin APS machine pistol
	<<case "Russian">>
		and, in keeping with her heritage, a KBP OTs-33 Pernach machine pistol
	<<case "American">>
		and, in keeping with her heritage, a MAC-10 machine pistol
	<<case "Japanese">>
		and, in keeping with her heritage, a Minebea PM-9 machine pistol
	<<case "Belgian">>
		and, in keeping with her heritage, a VBR-Belgium PDW machine pistol
	<<case "Israeli">>
		and, in keeping with her heritage, an IWI Uzi Pro machine pistol
	<<case "German">>
		and, in keeping with her heritage, a H&K VP70 machine pistol
	<<case "Mexican">>
		and, in keeping with her heritage, a Trejo Modelo 2 Especial machine pistol
	<<case "Chinese">>
		and, in keeping with her heritage, a Chongqing Changfeng CF-05 machine pistol
	<<case "Italian">>
		and, in keeping with her heritage, a Beretta 93R machine pistol
	<<case "Swedish">>
		and, in keeping with her heritage, a Saab Bofors Dynamics CBJ-MS machine pistol
	<<case "Polish">>
		and, in keeping with her heritage, a WITU PMM machine pistol
	<<case "Czech" "Slovak">>
		and, in keeping with her heritage, a CZUB CZ 75 Automatic machine pistol
	<<case "Swiss">>
		and, in keeping with her heritage, a B+T MP9 machine pistol
	<<case "Austrian">>
		and, in keeping with her heritage, a Steyr TMP machine pistol
	<<case "Turkish">>
		and, in keeping with her heritage, a TiSAS Zigana F machine pistol
	<<case "Romanian">>
		and, in keeping with her heritage, a UMS Pistolul md.98 Dracula machine pistol
	<<case "Hungarian">>
		and, in keeping with her heritage, a FEG KGP-9 machine pistol
	<<case "Peruvian">>
		and, in keeping with her heritage, a SIMA MGP-87 machine pistol
	<<default>>
		and a Glock 18 machine pistol
	<</switch>>
	at her side.
<</if>>
	
<</widget>>

<<widget "GenSkinTone">>

/*
black 5
brown 4
dark 3
olive 2
light brown 1
null 0
light -1
white -2
fair -3
pale -4
extremely pale -5
*/

<<set _skin = 0>>
<<set _skin0 = 0>>
<<set _skin1 = 0>>

<<switch $args[0].skin>>
<<case "black">>
	<<set _skin0 = 10>>
<<case "brown">>
	<<set _skin0 = 9>>
<<case "dark">>
	<<set _skin0 = 8>>
<<case "olive">>
	<<set _skin0 = 7>>
<<case "light brown">>
	<<set _skin0 = 6>>
<<case "light">>
	<<set _skin0 = 4>>
<<case "white">>
	<<set _skin0 = 3>>
<<case "fair">>
	<<set _skin0 = 2>>
<<case "pale">>
	<<set _skin0 = 1>>
<<case "extremely pale">>
	<<set _skin0 = 0>>
<<default>>
	<<set _skin0 = 5>>
<</switch>>

<<switch $args[1].skin>>
<<case "black">>
	<<set _skin1 = 10>>
<<case "brown">>
	<<set _skin1 = 9>>
<<case "dark">>
	<<set _skin1 = 8>>
<<case "olive">>
	<<set _skin1 = 7>>
<<case "light brown">>
	<<set _skin1 = 6>>
<<case "light">>
	<<set _skin1 = 4>>
<<case "white">>
	<<set _skin1 = 3>>
<<case "fair">>
	<<set _skin1 = 2>>
<<case "pale">>
	<<set _skin1 = 1>>
<<case "extremely pale">>
	<<set _skin1 = 0>>
<<default>>
	<<set _skin1 = 5>>
<</switch>>

<<set _skin = Math.round((_skin1+_skin0)/2)>>

<<switch _skin>>
<<case 10>>
	<<set $activeSlave.skin = "black">>
<<case 9>>
	<<set $activeSlave.skin = "brown">>
<<case 8>>
	<<set $activeSlave.skin = "dark">>
<<case 7>>
	<<set $activeSlave.skin = "olive">>
<<case 6>>
	<<set $activeSlave.skin = "light brown">>
<<case 4>>
	<<set $activeSlave.skin = "light">>
<<case 3>>
	<<set $activeSlave.skin = "white">>
<<case 2>>
	<<set $activeSlave.skin = "fair">>
<<case 1>>
	<<set $activeSlave.skin = "pale">>
<<case 0>>
	<<set _skin1 = "extremely pale">>
<<default>>
	<<set $activeSlave.skin = either($args[0].skin, $args[1].skin)>>
<</switch>>

<</widget>>

<<widget "Family">>

/*testtest PC parent passage - determines if the current slave is your mother or father*/
<<if $activeSlave.ID == $PC.mother && $activeSlave.ID == $PC.father>>
	She @@color:lightgreen;is both your mother and father, $pronoun impregnated <<print $object>>self with you.@@
<<elseif $activeSlave.ID == $PC.mother>>
	$pronounCap @@color:lightgreen;is your mother.@@
<<elseif $activeSlave.ID == $PC.father>>
	$pronounCap @@color:lightgreen;is your father.@@
<</if>>

<<if $activeSlave.father == -1 && $activeSlave.mother == -1>>
	She's @@color:lightgreen;your daughter,@@ you knocked yourself up and gave birth to $object.
<</if>>

<<if $activeSlave.father == -1 && $activeSlave.mother != -1>>
	She's @@color:lightgreen;your daughter;@@ you knocked $possessive mother up.
<<elseif $activeSlave.father > 0>>
	<<for $i to 0; $i < $slaves.length; $i++>>
		<<if $slaves[$i].ID == $activeSlave.father>>
			$pronounCap was @@color:lightgreen;fathered by $slaves[$i].slaveName's@@ virile dick.
			<<break>>
		<</if>>
	<</for>>
<</if>>

<<if $activeSlave.father != -1 && $activeSlave.mother == -1>>
	She's @@color:lightgreen;your daughter;@@ you gave birth to $object.
<<elseif $activeSlave.mother > 0>>
	<<for $i to 0; $i < $slaves.length; $i++>>
		<<if $slaves[$i].ID == $activeSlave.mother>>
			$pronounCap was @@color:lightgreen;born from $slaves[$i].slaveName's@@ fertile womb.
			<<break>>
		<</if>>
	<</for>>
<</if>>

<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $activeSlave.ID == $slaves[$i].father>>
		<<set $children.push($slaves[$i])>>
	<</if>>
<</for>>
<<if $children.length > 2>>
	$pronounCap @@color:lightgreen;fathered
	<<for $j to 0; $j < $children.length; $j++>>
		<<if $j < $children.length-1>>
			$children[$j].slaveName,
		<<else>>
			and $children[$j].slaveName.@@
		<</if>>
	<</for>>
<<elseif $children.length > 1>>
	$pronounCap @@color:lightgreen;fathered a pair of your slaves: $children[0].slaveName, and $children[1].slaveName.@@	
<<elseif $children.length > 0>>
	$pronounCap @@color:lightgreen;fathered a single slave of yours: $children[0].slaveName.@@
<</if>>
<<set $children = []>>

<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $activeSlave.ID == $slaves[$i].mother>>
		<<set $children.push($slaves[$i])>>
	<</if>>
<</for>>
<<if $children.length > 2>>
	$pronounCap @@color:lightgreen;gave birth to
	<<for $j to 0; $j < $children.length; $j++>>
		<<if $j < $children.length-1>>
			$children[$j].slaveName,
		<<else>>
			and $children[$j].slaveName.@@
		<</if>>
	<</for>>
<<elseif $children.length > 1>>
	$pronounCap @@color:lightgreen;gave birth to a pair of your slaves: $children[0].slaveName, and $children[1].slaveName.@@	
<<elseif $children.length > 0>>
	$pronounCap @@color:lightgreen;gave birth to a single of your slaves: $children[0].slaveName.@@
<</if>>
<<set $children = []>>


/*testtest maternal grandma passage - determines if the current slave has a maternal grandmother*/
<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $slaves[$i].ID != $activeSlave.ID && $slaves[$i].ID == $activeSlave.mother>>
		<<for $j to 0; $j < $slaves.length; $j++>>
			<<if $slaves[$j].ID != $activeSlave.ID && $slaves[$j].ID != $slaves[$i].ID && $slaves[$j].ID == $slaves[$i].mother>>
				$pronounCap maternal @@color:lightgreen;grandmother is $slaves[$j].slaveName.@@
			<</if>>
		<</for>>
	<<elseif $PC.ID == $activeSlave.mother && $slaves[$i].ID == $PC.mother>>
		$pronounCap maternal @@color:lightgreen;grandmother is $slaves[$i].slaveName.@@
	<</if>>
<</for>>

/*testtest maternal grandpa passage - determines if the current slave has a maternal grandfather*/
<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $slaves[$i].ID != $activeSlave.ID && $slaves[$i].ID == $activeSlave.mother>>
		<<for $j to 0; $j < $slaves.length; $j++>>
			<<if $slaves[$j].ID != $activeSlave.ID && $slaves[$j].ID != $slaves[$i].ID && $slaves[$j].ID == $slaves[$i].father>>
				$pronounCap maternal @@color:lightgreen;grandfather is $slaves[$j].slaveName.@@
			<</if>>
		<</for>>
	<<elseif $PC.ID == $activeSlave.mother && $slaves[$i].ID == $PC.father>>
		$pronounCap maternal @@color:lightgreen;grandfather is $slaves[$i].slaveName.@@
	<</if>>
<</for>>

/*testtest paternal grandma passage - determines if the current slave has a paternal grandmother*/
<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $slaves[$i].ID != $activeSlave.ID && $slaves[$i].ID == $activeSlave.father>>
		<<for $j to 0; $j < $slaves.length; $j++>>
			<<if $slaves[$j].ID != $activeSlave.ID && $slaves[$j].ID != $slaves[$i].ID && $slaves[$j].ID == $slaves[$i].mother>>
				$pronounCap paternal @@color:lightgreen;grandmother is $slaves[$j].slaveName.@@
			<</if>>
		<</for>>
	<<elseif $PC.ID == $activeSlave.father && $slaves[$i].ID == $PC.mother>>
		$pronounCap paternal @@color:lightgreen;grandmother is $slaves[$i].slaveName.@@
	<</if>>
<</for>>

/*testtest paternal grandpa passage - determines if the current slave has a paternal grandfather*/
<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $slaves[$i].ID != $activeSlave.ID && $slaves[$i].ID == $activeSlave.father>>
		<<for $j to 0; $j < $slaves.length; $j++>>
			<<if $slaves[$j].ID != $activeSlave.ID && $slaves[$j].ID != $slaves[$i].ID && $slaves[$j].ID == $slaves[$i].father>>
				$pronounCap paternal @@color:lightgreen;grandfather is $slaves[$j].slaveName.@@
			<</if>>
		<</for>>
	<<elseif $PC.ID == $activeSlave.father && $slaves[$i].ID == $PC.father>>
		$pronounCap paternal @@color:lightgreen;grandfather is $slaves[$i].slaveName.@@
	<</if>>	
<</for>>

/*testtest PC grandparents passage - determines if the current slave is your grandparent*/
<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $slaves[$i].ID != $activeSlave.ID>>
	<<if $activeSlave.ID == $slaves[$i].mother && $slaves[$i].ID == $PC.mother && $activeSlave.ID == $slaves[$i].father && $slaves[$i].ID == $PC.father>>
		$pronounCap is @@color:lightgreen;your grandparent.@@ $pronounCap impregnated <<print $object>>self with your mother/father who in turn impregnated themselves with you.
	<<elseif $activeSlave.ID == $slaves[$i].mother>>
		<<if $slaves[$i].ID == $PC.mother>>
			$pronounCap is @@color:lightgreen;your maternal grandmother.@@
		<<elseif $slaves[$i].ID == $PC.father>>
			$pronounCap is @@color:lightgreen;your paternal grandmother.@@
		<</if>>
	<<elseif $activeSlave.ID == $slaves[$i].father>>
		<<if $slaves[$i].ID == $PC.mother>>
			$pronounCap is @@color:lightgreen;your maternal grandfather.@@
		<<elseif $slaves[$i].ID == $PC.father>>
			$pronounCap is @@color:lightgreen;your paternal grandfather.@@
		<</if>>
	<</if>>
	<</if>>
<</for>>

/*testtest grandchild passage - determines how many grandchildren the current slave has*/
<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $slaves[$i].ID != $activeSlave.ID>>
	<<if $activeSlave.ID == $slaves[$i].mother or $activeSlave.ID == $slaves[$i].father>>
		<<for $j to 0; $j < $slaves.length; $j++>>
			<<if $slaves[$i].ID != $slaves[$j].ID>>
			<<if $slaves[$i].ID == $slaves[$j].mother or $slaves[$i].ID == $slaves[$j].father>>
				<<set $children.push($slaves[$j])>>
			<</if>>
			<</if>>
		<</for>>
	<</if>>
	<</if>>
<</for>>
<<if $children.length > 0>>
	$pronounCap 
<<if $children.length > 2>>
	has @@color:lightgreen;many grandchildren,
	<<for $j to 0; $j < $children.length; $j++>>
		<<if $j < $children.length-1>>
			$children[$j].slaveName,
		<<else>>
			and $children[$j].slaveName amongst your slaves.@@
		<</if>>
	<</for>>
<<elseif $children.length > 1>>
	has @@color:lightgreen;two grandchildren, $children[0].slaveName, and $children[1].slaveName as your slaves.@@ 
<<elseif $children.length > 0>>
	has a @@color:lightgreen;grandchild, $children[0].slaveName as your slave.@@
<</if>>
<</if>>
<<set $children = []>>

/*testtest PC aunt passage - determines how many aunts you have*/
<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $slaves[$i].ID != $activeSlave.ID>>
	<<if areSisters($slaves[$i], $activeSlave) == 1 ||  areSisters($slaves[$i], $activeSlave) == 2>> 
	<<if $slaves[$i].ID == $PC.mother || $slaves[$i].ID == $PC.father>>
		<<for $j to 0; $j < $slaves.length; $j++>>
			<<if $slaves[$i].ID != $slaves[$j].ID >>
			<<if $slaves[$j].vagina > -1>>
			<<if areSisters($slaves[$j], $activeSlave) == 1 ||  areSisters($slaves[$j], $activeSlave) == 2>>
				<<set $children.push($slaves[$j])>>
			<</if>>
			<</if>>
			<</if>>
		<</for>>
	<</if>>
	<</if>>
	<</if>>
<</for>>
<<if $activeSlave.vagina > -1 && $children.length > 0>>
	$pronounCap 
	<<if $children.length > 2>>
		is @@color:lightgreen;your aunt along with 
		<<for $j to 0; $j < $children.length; $j++>>
			<<if $j < $children.length-1>>
				$children[$j].slaveName,
			<<else>>
				and $children[$j].slaveName.@@
			<</if>>
		<</for>>
	<<elseif $children.length > 1>>
		is @@color:lightgreen;your aunt along with $children[0].slaveName.@@
	<<elseif $children.length > 0>>
		<<for $i to 0; $i < $slaves.length; $i++>>
			<<if $slaves[$i].ID != $activeSlave.ID && $activeSlave.vagina > -1>>
			<<if areSisters($slaves[$i], $activeSlave) == 1 ||  areSisters($slaves[$i], $activeSlave) == 2>> 
			<<if $slaves[$i].ID == $PC.mother || $slaves[$i].ID == $PC.father>>
				$pronounCap is @@color:lightgreen;your aunt.@@
			<</if>>
			<</if>>
			<</if>>
		<</for>>
	<</if>>
<</if>>
<<set $children = []>>

/*testtest PC uncle passage - determines how many uncles you have*/
<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $slaves[$i].ID != $activeSlave.ID>>
	<<if areSisters($slaves[$i], $activeSlave) == 1 ||  areSisters($slaves[$i], $activeSlave) == 2>> 
	<<if $slaves[$i].ID == $PC.mother || $slaves[$i].ID == $PC.father>>
		<<for $j to 0; $j < $slaves.length; $j++>>
			<<if $slaves[$i].ID != $slaves[$j].ID && $slaves[$j].dick > 0 && $slaves[$j].vagina == -1>>
			<<if areSisters($slaves[$j], $activeSlave) == 1 ||  areSisters($slaves[$j], $activeSlave) == 2>>
				<<set $children.push($slaves[$j])>>
			<</if>>
			<</if>>
		<</for>>
	<</if>>
	<</if>>
	<</if>>
<</for>>
<<if $activeSlave.dick > 0 && $activeSlave.vagina == -1 && $children.length > 0>>
	$pronounCap 
	<<if $children.length > 2>>
		is @@color:lightgreen;your uncle along with 
		<<for $j to 0; $j < $children.length; $j++>>
			<<if $j < $children.length-1>>
				$children[$j].slaveName,
			<<else>>
				and $children[$j].slaveName.@@
			<</if>>
		<</for>>
	<<elseif $children.length > 1>>
		is @@color:lightgreen;your uncle along with $children[0].slaveName.@@
	<<elseif $children.length > 0>>
		<<for $i to 0; $i < $slaves.length; $i++>>
			<<if $slaves[$i].ID != $activeSlave.ID && $activeSlave.dick > 0 && $activeSlave.vagina == -1>>
			<<if areSisters($slaves[$i], $activeSlave) == 1 ||  areSisters($slaves[$i], $activeSlave) == 2>> 
			<<if $slaves[$i].ID == $PC.mother || $slaves[$i].ID == $PC.father>>
				$pronounCap is @@color:lightgreen;your uncle.@@
			<</if>>
			<</if>>
			<</if>>
		<</for>>
	<</if>>
<</if>>
<<set $children = []>>

/*testtest aunt passage - determines how many aunts a slave has*/
<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $slaves[$i].ID != $activeSlave.ID>>
	<<if $slaves[$i].ID == $activeSlave.mother || $slaves[$i].ID == $activeSlave.father>>
		<<for $j to 0; $j < $slaves.length; $j++>>
			<<if $slaves[$j].vagina > -1>>
			<<if areSisters($slaves[$j], $slaves[$i]) == 1 || areSisters($slaves[$j], $slaves[$i]) == 2>> 
				<<set $children.push($slaves[$j])>>
			<</if>>
			<</if>>
		<</for>>
	<</if>>
	<</if>>
<</for>>
<<if $children.length > 0>>
	$pronounCap 
<<if $children.length > 2>>
	has @@color:lightgreen;many aunts,
	<<for $j to 0; $j < $children.length; $j++>>
		<<if $j < $children.length-1>>
			$children[$j].slaveName,
		<<else>>
			and $children[$j].slaveName.@@
		<</if>>
	<</for>>
<<elseif $children.length > 1>>
	 has @@color:lightgreen;two aunts, $children[0].slaveName, and $children[1].slaveName.@@ 
<<elseif $children.length > 0>>
	 has @@color:lightgreen;an aunt, $children[0].slaveName.@@
<</if>>
<</if>>
<<set $children = []>>

/*testtest uncle passage - determines how many uncles a slave has*/
<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $slaves[$i].ID != $activeSlave.ID>>
	<<if $slaves[$i].ID == $activeSlave.mother || $slaves[$i].ID == $activeSlave.father>>
		<<for $j to 0; $j < $slaves.length; $j++>>
			<<if $slaves[$j].dick > 0 && $slaves[$j].vagina == -1>>
			<<if areSisters($slaves[$j], $slaves[$i]) == 1 || areSisters($slaves[$j], $slaves[$i]) == 2>> 
				<<set $children.push($slaves[$j])>>
			<</if>>
			<</if>>
		<</for>>
	<</if>>
	<</if>>
<</for>>
<<if $activeSlave.vagina > -1 && $children.length > 0>>
	$pronounCap 
<<if $children.length > 2>>
	has @@color:lightgreen;many aunts,
	<<for $j to 0; $j < $children.length; $j++>>
		<<if $j < $children.length-1>>
			$children[$j].slaveName,
		<<else>>
			and $children[$j].slaveName.@@
		<</if>>
	<</for>>
<<elseif $children.length > 1>>
	 has @@color:lightgreen;two aunts, $children[0].slaveName, and $children[1].slaveName.@@ 
<<elseif $children.length > 0>>
	 has @@color:lightgreen;an aunt, $children[0].slaveName.@@
<</if>>
<</if>>
<<set $children = []>>

/*testtest PC niece passage - determines how many nieces you have*/
<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $slaves[$i].ID != $activeSlave.ID>>
	<<if areSisters($slaves[$i], $PC) == 1 || areSisters($slaves[$i], $PC) == 2>>
	<<if $slaves[$i].ID == $activeSlave.mother || $slaves[$i].ID == $activeSlave.father>>
		<<for $j to 0; $j < $slaves.length; $j++>>
			<<if $slaves[$i].ID != $slaves[$j].ID && $slaves[$j].vagina > -1>>
			<<if $slaves[$i].ID == $slaves[$j].mother || $slaves[$i].ID == $slaves[$j].father>>
				<<set $children.push($slaves[$j])>>
			<</if>>
			<</if>>
		<</for>>
	<</if>>
	<</if>>
	<</if>>
<</for>>
<<if $activeSlave.vagina > -1 && $children.length > 0>>
	$pronounCap
<<if $children.length > 2>>
	is @@color:lightgreen;your niece along with 
	<<for $j to 0; $j < $children.length; $j++>>
		<<if $j < $children.length-1>>
			$children[$j].slaveName,
		<<else>>
			 and $children[$j].slaveName.@@
		<</if>>
	<</for>>
<<elseif $children.length > 1>>
	is @@color:lightgreen;your niece along with $children[0].slaveName.@@ 
<<elseif $children.length > 0>>
<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $slaves[$i].ID != $activeSlave.ID && $activeSlave.vagina > -1>>
	<<if areSisters($slaves[$i], $PC) == 1 || areSisters($slaves[$i], $PC) == 2>>
	<<if $slaves[$i].ID == $activeSlave.mother || $slaves[$i].ID == $activeSlave.father>>
		She is @@color:lightgreen;your niece.@@
	<</if>>
	<</if>>
	<</if>>
<</for>>
<</if>>
<</if>>
<<set $children = []>>

/* testtest niece passage - determines how many nieces a slave has*/
<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $slaves[$i].ID != $activeSlave.ID>>
	<<if areSisters($slaves[$i], $activeSlave) > 0>> 
		<<for $j to 0; $j < $slaves.length; $j++>>
			<<if $slaves[$i].ID != $slaves[$j].ID && $slaves[$j].vagina > -1>>
			<<if $slaves[$i].ID == $slaves[$j].mother || $slaves[$i].ID == $slaves[$j].father>>
				<<set $children.push($slaves[$j])>>
			<</if>>
			<</if>>
		<</for>>
	<</if>>
	<</if>>
<</for>>
<<if $activeSlave.vagina > -1 && $children.length > 0>>
	$pronounCap
<<if $children.length > 2>>
	has @@color:lightgreen;many nieces,
	<<for $j to 0; $j < $children.length; $j++>>
		<<if $j < $children.length-1>>
			$children[$j].slaveName,
		<<else>>
			and $children[$j].slaveName, who are your slaves.@@
		<</if>>
	<</for>>
<<elseif $children.length > 1>>
	has @@color:lightgreen;two nieces, $children[0].slaveName, and $children[1].slaveName, who are your slaves.@@ 
<<elseif $children.length > 0>>
	has @@color:lightgreen;a niece, $children[0].slaveName, who is your slave.@@
<</if>>
<</if>>
<<set $children = []>>

/*testtest PC nephew passage - determines how many nephews you have*/
<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $slaves[$i].ID != $activeSlave.ID>>
	<<if areSisters($slaves[$i], $PC) == 1 || areSisters($slaves[$i], $PC) == 2>>
	<<if $slaves[$i].ID == $activeSlave.mother || $slaves[$i].ID == $activeSlave.father>>
		<<for $j to 0; $j < $slaves.length; $j++>>
			<<if $slaves[$i].ID != $slaves[$j].ID && $slaves[$i].dick > 0 && $slaves[$i].vagina == -1>>
			<<if $slaves[$i].ID == $slaves[$j].mother || $slaves[$i].ID == $slaves[$j].father>>
				<<set $children.push($slaves[$j])>>
			<</if>>
			<</if>>
		<</for>>
	<</if>>
	<</if>>
	<</if>>
<</for>>
<<if $activeSlave.dick > 0 && $activeSlave.vagina == -1 && $children.length > 0>>
	$pronounCap
<<if $children.length > 2>>
	is @@color:lightgreen;your nephew along with 
	<<for $j to 0; $j < $children.length; $j++>>
		<<if $j < $children.length-1>>
			$children[$j].slaveName,
		<<else>>
			 and $children[$j].slaveName.@@
		<</if>>
	<</for>>
<<elseif $children.length > 1>>
	is @@color:lightgreen;your nephew along with $children[0].slaveName.@@ 
<<elseif $children.length > 0>>
<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $slaves[$i].ID != $activeSlave.ID && $activeSlave.dick > 0 && $activeSlave.vagina == -1>>
	<<if areSisters($slaves[$i], $PC) == 1 || areSisters($slaves[$i], $PC) == 2>>
	<<if $slaves[$i].ID == $activeSlave.mother || $slaves[$i].ID == $activeSlave.father>>
		He is @@color:lightgreen;your nephew.@@
	<</if>>
	<</if>>
	<</if>>
<</for>>
<</if>>
<</if>>
<<set $children = []>>

/* testtest nephew passage - determines how many nephews a slave has*/
<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $slaves[$i].ID != $activeSlave.ID>>
	<<if areSisters($slaves[$i], $activeSlave) > 0>> 
		<<for $j to 0; $j < $slaves.length; $j++>>
			<<if $slaves[$i].ID != $slaves[$j].ID && $slaves[$j].dick > 0 && $slaves[$j].vagina == -1>>
			<<if $slaves[$i].ID == $slaves[$j].mother || $slaves[$i].ID == $slaves[$j].father>>
				<<set $children.push($slaves[$j])>>
			<</if>>
			<</if>>
		<</for>>
	<</if>>
	<</if>>
<</for>>
<<if $activeSlave.vagina > -1 && $children.length > 0>>
	$pronounCap
<<if $children.length > 2>>
	has @@color:lightgreen;many nieces,
	<<for $j to 0; $j < $children.length; $j++>>
		<<if $j < $children.length-1>>
			$children[$j].slaveName,
		<<else>>
			and $children[$j].slaveName, who are your slaves.@@
		<</if>>
	<</for>>
<<elseif $children.length > 1>>
	has @@color:lightgreen;two nieces, $children[0].slaveName, and $children[1].slaveName, who are your slaves.@@ 
<<elseif $children.length > 0>>
	has @@color:lightgreen;a niece, $children[0].slaveName, who is your slave.@@
<</if>>
<</if>>
<<set $children = []>>

/*testtest PC twin passages - determines how many twins you have but not implemented yet*/
<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $slaves[$i].ID != $activeSlave.ID>>
	<<if areSisters($activeSlave, $PC) == 1 && areSisters($slaves[$i], $activeSlave) == 1>>
		<<set $children.push($slaves[$i])>>
	<</if>>
	<</if>>
<</for>>
<<if $children.length > 2>>
	$pronounCap @@color:lightgreen;shared a cramped womb with you
	<<for $j to 0; $j < $children.length; $j++>>
		<<if $j < $children.length-1>>
			, $children[$j].slaveName
		<<else>>
			and $children[$j].slaveName.@@
		<</if>>
	<</for>>	
<<elseif $children.length > 1>>
	$pronounCap is @@color:lightgreen;your twin along with $children[0].slaveName.@@
<<elseif $children.length > 0>>
	$pronounCap is @@color:lightgreen;your twin sister.@@
<</if>>
<<set $children = []>>

/*testtest PC sister passages - determines how many sisters you have*/
<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $slaves[$i].ID != $activeSlave.ID>>
	<<if areSisters($activeSlave, $PC) == 2 && areSisters($slaves[$i], $activeSlave) < 3 && areSisters($slaves[$i], $activeSlave) > 0 && $slaves[$i].vagina > -1>>
		<<set $children.push($slaves[$i])>>
	<</if>>
	<</if>>
<</for>>
<<if $activeSlave.vagina > -1 && $children.length > 0>>
	$pronounCap 
<<if $children.length > 2>>
	@@color:lightgreen;is your sister along with
	<<for $j to 0; $j < $children.length; $j++>>
		<<if $j < $children.length-1>>
			$children[$j].slaveName,
		<<else>>
			and $children[$j].slaveName.@@
		<</if>>
	<</for>>	
<<elseif $children.length > 1>>
	is @@color:lightgreen;your sister along with $children[0].slaveName.@@	
<<elseif $children.length > 0>>
	is @@color:lightgreen;your sister.@@
<</if>>
<</if>>
<<set $children = []>>

/*testtest PC brother passages - determines how many brothers you have*/
<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $slaves[$i].ID != $activeSlave.ID>>
	<<if areSisters($activeSlave, $PC) == 2 && areSisters($slaves[$i], $activeSlave) < 2 && areSisters($slaves[$i], $activeSlave) > 0 && $slaves[$i].dick > 0 && $slaves[$i].vagina == -1>>
		<<set $children.push($slaves[$i])>>
	<</if>>
	<</if>>
<</for>>
<<if $activeSlave.dick > 0 && $activeSlave.vagina == -1 && $children.length > 0>>
	$pronounCap 
<<if $children.length > 2>>
	@@color:lightgreen;is your brother along with
	<<for $j to 0; $j < $children.length; $j++>>
		<<if $j < $children.length-1>>
			$children[$j].slaveName,
		<<else>>
			and $children[$j].slaveName.@@
		<</if>>
	<</for>>	
<<elseif $children.length > 1>>
	is @@color:lightgreen;your brother along with $children[0].slaveName.@@
<<elseif $children.length > 0>>
	is @@color:lightgreen;your brother.@@
<</if>>
<</if>>
<<set $children = []>>

/*testtest PC half-sister passages - determines how many half-sisters you have*/
<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $slaves[$i].ID != $activeSlave.ID>>
	<<if areSisters($activeSlave, $PC) == 3 && areSisters($slaves[$i], $PC) == 3 && $slaves[$i].vagina > -1>>
		<<set $children.push($slaves[$i])>>
	<</if>>
	<</if>>
<</for>>
<<if $activeSlave.vagina > -1 && $children.length > 0>>
	$pronounCap 
<<if $children.length > 2>>
	is @@color:lightgreen;your half-sister along with
	<<for $j to 0; $j < $children.length; $j++>>
		<<if $j < $children.length-1>>
			$children[$j].slaveName,
		<<else>>
			and $children[$j].slaveName.@@
		<</if>>
	<</for>>
<<elseif $children.length > 1>>
	is @@color:lightgreen;your half-sister along with $children[0].slaveName.@@	
<<elseif $children.length > 0>>
	is @@color:lightgreen;your half-sister.@@
<</if>>
<</if>>
<<set $children = []>>

/*testtest PC half-brother passages - determines how many half-brothers you have*/
<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $slaves[$i].ID != $activeSlave.ID>>
	<<if areSisters($activeSlave, $PC) == 3 && areSisters($slaves[$i], $PC) == 3 && $slaves[$i].dick > 0 && $slaves[$i].vagina == -1>>
		<<set $children.push($slaves[$i])>>
	<</if>>
	<</if>>
<</for>>
<<if $activeSlave.dick > 0 && $activeSlave.vagina == -1 && $children.length > 0>>
	$pronounCap 
<<if $children.length > 2>>
	is @@color:lightgreen;your half-brother along with
	<<for $j to 0; $j < $children.length; $j++>>
		<<if $j < $children.length-1>>
			$children[$j].slaveName,
		<<else>>
			and $children[$j].slaveName.@@
		<</if>>
	<</for>>
<<elseif $children.length > 1>>
	is @@color:lightgreen;your half-brother along with $children[0].slaveName.@@
<<elseif $children.length > 0>>
	is @@color:lightgreen;your half-brother.@@
<</if>>
<</if>>
<<set $children = []>>

<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $slaves[$i].ID != $activeSlave.ID>>
		<<if areSisters($activeSlave, $slaves[$i]) == 1>>
			<<set $children.push($slaves[$i])>>
		<</if>>
	<</if>>
<</for>>
<<if $children.length > 2>>
	$pronounCap @@color:lightgreen;shared a cramped womb with
	<<for $j to 0; $j < $children.length; $j++>>
		<<if $j < $children.length-1>>
			$children[$j].slaveName,
		<<else>>
			and $children[$j].slaveName.@@
		<</if>>
	<</for>>
<<elseif $children.length > 1>>
	$pronounCap is a @@color:lightgreen;one of a set of triplets; $children[0].slaveName, and $children[1].slaveName@@ complete the trio.	
<<elseif $children.length > 0>>
	$pronounCap is @@color:lightgreen;twins with $children[0].slaveName.@@
<</if>>
<<set $children = []>>

/*testtest sister - determines how many sisters a slave has*/
<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $slaves[$i].ID != $activeSlave.ID>>
		<<if areSisters($activeSlave, $slaves[$i]) == 2 && $slaves[$i].vagina > -1>>
			<<set $children.push($slaves[$i])>>
		<</if>>
	<</if>>
<</for>>
<<if $children.length > 2>>
	$pronounCap is @@color:lightgreen;sisters with
	<<for $j to 0; $j < $children.length; $j++>>
		<<if $j < $children.length-1>>
			$children[$j].slaveName,
		<<else>>
			and $children[$j].slaveName.@@
		<</if>>
	<</for>>
<<elseif $children.length > 1>>
	$pronounCap is @@color:lightgreen;sisters with $children[0].slaveName and $children[1].slaveName.@@	
<<elseif $children.length > 0>>
	$pronounCap is @@color:lightgreen;sisters with $children[0].slaveName.@@
<</if>>
<<set $children = []>>

/*testtest brother - determines how many brothers a slave has*/
<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $slaves[$i].ID != $activeSlave.ID>>
		<<if areSisters($activeSlave, $slaves[$i]) == 2 && $slaves[$i].dick > 0 && $slaves[$i].vagina == -1>>
			<<set $children.push($slaves[$i])>>
		<</if>>
	<</if>>
<</for>>
<<if $children.length > 2>>
	$pronounCap is @@color:lightgreen;brothers with
	<<for $j to 0; $j < $children.length; $j++>>
		<<if $j < $children.length-1>>
			$children[$j].slaveName,
		<<else>>
			and $children[$j].slaveName.@@
		<</if>>
	<</for>>
<<elseif $children.length > 1>>
	$pronounCap is @@color:lightgreen;brothers with $children[0].slaveName and $children[1].slaveName.@@
<<elseif $children.length > 0>>
	$pronounCap is @@color:lightgreen;brothers with $children[0].slaveName.@@
<</if>>
<<set $children = []>>

/*testtest half-sister - determines how many half-sisters a slave has*/
<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $slaves[$i].ID != $activeSlave.ID>>
		<<if areSisters($activeSlave, $slaves[$i]) == 3>>
			<<set $children.push($slaves[$i])>>
		<</if>>
	<</if>>
<</for>>
<<if $children.length > 2>>
	$pronounCap is @@color:lightgreen;half-sisters with
	<<for $j to 0; $j < $children.length; $j++>>
		<<if $j < $children.length-1>>
			$children[$j].slaveName,
		<<else>>
			and $children[$j].slaveName.@@
		<</if>>
	<</for>>
<<elseif $children.length > 1>>
	$pronounCap is a @@color:lightgreen;half-sister to $children[0].slaveName and $children[1].slaveName.@@
<<elseif $children.length > 0>>
	$pronounCap is a @@color:lightgreen;half-sister to $children[0].slaveName.@@
<</if>>
<<set $children = []>>

/*testtest half-brother - determines how many half-brothers a slave has*/
<<for $i to 0; $i < $slaves.length; $i++>>
	<<if $slaves[$i].ID != $activeSlave.ID>>
		<<if areSisters($activeSlave, $slaves[$i]) == 3 && $slaves[$i].dick > 0 && $slaves[$i].vagina == -1>>
			<<set $children.push($slaves[$i])>>
		<</if>>
	<</if>>
<</for>>
<<if $children.length > 2>>
	$pronounCap is @@color:lightgreen;half-brothers with
	<<for $j to 0; $j < $children.length; $j++>>
		<<if $j < $children.length-1>>
			$children[$j].slaveName,
		<<else>>
			and $children[$j].slaveName.@@
		<</if>>
	<</for>>
<<elseif $children.length > 1>>
	$pronounCap is a @@color:lightgreen;half-brother to $children[0].slaveName and $children[1].slaveName.@@
<<elseif $children.length > 0>>
	$pronounCap is a @@color:lightgreen;half-brother to $children[0].slaveName.@@
<</if>>
<<set $children = []>>

<</widget>>