:: Incubator [nobr]

<<set $nextButton = "Back to Main", $nextLink = "Main", $returnTo = "Incubator">>
<<set $targetAge = Number($targetAge) || $minimumSlaveAge>>
<<set $targetAge = Math.clamp($targetAge, $minimumSlaveAge, 42)>>

<<if $incubatorName != "the Incubator">>
	<<set $incubatorNameCaps = $incubatorName.replace("the ", "The ")>>
<</if>>

<<set $readySlaves = 0, $readySlave = 0, $incubatorSlaves = $tanks.length, $freeTanks = $incubator - $incubatorSlaves, _SL = $slaves.length, _eligibility = 0>>

<br><br>
$incubatorNameCaps is a clean, cold hall designed to be lined with tanks and their connected monitoring systems.

<<if $incubatorSlaves > 2>>
	It's well used. The hum of active tanks fill the air.
<<elseif $incubatorSlaves > 0>>
	It's barely used; most of the tanks lie dormant.
<<else>>
	It's empty and quiet. [[Decommission the incubator|Main][$incubator = 0, $incubatorUpgradeSpeed = 5, $incubatorUpgradeWeight = 0, $incubatorUpgradeMuscles = 0, $incubatorUpgradeReproduction = 0, $incubatorUpgradeGrowthStims = 0, $incubatorWeightSetting = 0, $incubatorMusclesSetting = 0, $incubatorReproductionSetting = 0, $incubatorGrowthStimsSetting = 0, $tanks = []]]
<</if>>

<br>It can support $incubator <<if $incubator == 1>>child<<else>>children<</if>>. Currently $incubatorSlaves tanks are in use.
[[Add another incubation tank|Incubator][$cash -= Math.trunc(60000*$upgradeMultiplierArcology), $incubator += 1]] //Costs <<print cashFormat(Math.trunc(60000*$upgradeMultiplierArcology))>> and will increase upkeep costs//
<<if $freeTanks == 0>>
	All of the tanks are currently occupied by growing children.
<<elseif $incubator > 1 && $reservedChildren < $freeTanks>>
	[[Remove an incubation tank|Incubator][$cash -= Math.trunc(10000*$upgradeMultiplierArcology), $incubator -= 1]] //Costs <<print cashFormat(Math.trunc(10000*$upgradeMultiplierArcology))>> and will reduce upkeep costs//
<</if>>

<br><br>
Reserve an eligible mother-to-be's child to be placed in a tank upon birth. Of $incubator tanks, <<print $freeTanks>> <<if $freeTanks == 1>>is<<else>>are<</if>> unoccupied. Of those, $reservedChildren <<if $reservedChildren == 1>>tank is<<else>>tanks are<</if>> reserved.
<<for _u = 0; _u < _SL; _u++>>
	<<if $slaves[_u].preg > 0 && $slaves[_u].broodmother == 0 && $slaves[_u].pregKnown == 1 && $slaves[_u].eggType == "human">>
	<<if $slaves[_u].assignment == "work in the dairy" && $dairyPregSetting > 0>>
	<<else>>
		<br><<print "[[$slaves[" + _u + "].slaveName|Long Slave Description][$activeSlave = $slaves[" + _u + "], $nextLink = passage()]]">> is $slaves[_u].pregWeek weeks pregnant with
		<<if $slaves[_u].pregSource == 0 || $slaves[_u].preg <= 5>>someone's<<if $slaves[_u].preg <= 5>>, though it is too early to tell whose,<</if>>
		<<elseif $slaves[_u].pregSource == -1>>your
		<<elseif $slaves[_u].pregSource == -2>>a citizen's
		<<else>>
			<<set _t = $slaveIndices[$slaves[_u].pregSource]>>
			<<if def _t>>
				<<print $slaves[_t].slaveName>>'s
			<</if>>
		<</if>>
		<<if $slaves[_u].pregType > 1>>$slaves[_u].pregType babies<<else>>baby<</if>>.
		<<if $slaves[_u].reservedChildren > 0>>
			<<set _childrenReserved = 1>>
		    <<if $slaves[_u].pregType == 1>>
				Her child will be placed in $incubatorName.
			<<elseif $slaves[_u].reservedChildren < $slaves[_u].pregType>>
				$slaves[_u].reservedChildren of her children will be placed in $incubatorName.
			<<elseif $slaves[_u].pregType == 2>>
				Both of her children will be placed in $incubatorName.
			<<else>>
				All $slaves[_u].reservedChildren of her children will be placed in $incubatorName.
			<</if>>
			<<if ($slaves[_u].reservedChildren < $slaves[_u].pregType) && ($reservedChildren < $freeTanks)>>
				<br>&nbsp;&nbsp;&nbsp;&nbsp;
				<<print "[[Keep another child|Incubator][$slaves[" + _u + "].reservedChildren += 1, $reservedChildren += 1]]">>
				<<if $slaves[_u].reservedChildren > 0>>
					| <<print "[[Keep one less child|Incubator][$slaves[" + _u + "].reservedChildren -= 1, $reservedChildren -= 1]]">>
				<</if>>
				<<if $slaves[_u].reservedChildren > 1>>
					| <<print "[[Keep none of her children|Incubator][$reservedChildren -= $slaves[" + _u + "].reservedChildren, $slaves[" + _u + "].reservedChildren = 0]]">>
				<</if>>
				<<if ($reservedChildren + $slaves[_u].pregType - $slaves[_u].reservedChildren) <= $freeTanks>>
					| <<print "[[Keep the rest of her children|Incubator][$reservedChildren += ($slaves[" + _u + "].pregType - $slaves[" + _u + "].reservedChildren), $slaves[" + _u + "].reservedChildren += ($slaves[" + _u + "].pregType - $slaves[" + _u + "].reservedChildren)]]">>
				<</if>>
			<<elseif ($slaves[_u].reservedChildren == $slaves[_u].pregType) || ($reservedChildren == $freeTanks)>>
				<br>&nbsp;&nbsp;&nbsp;&nbsp;
				<<print "[[Keep one less child|Incubator][$slaves[" + _u + "].reservedChildren -= 1, $reservedChildren -= 1]]">>
				<<if $slaves[_u].reservedChildren > 1>>
					| <<print "[[Keep none of her children|Incubator][$reservedChildren -= $slaves[" + _u + "].reservedChildren, $slaves[" + _u + "].reservedChildren = 0]]">>
				<</if>>
			<</if>>
		<<elseif $reservedChildren < $freeTanks>>
			You have <<if $freeTanks == 1>>an<</if>> @@.lime;available aging tank<<if $freeTanks > 1>>s<</if>>.@@
			<br>&nbsp;&nbsp;&nbsp;&nbsp;
			<<print "[[Keep "+ (($slaves[_u].pregType > 1) ? "a" : "the") +" child|Incubator][$slaves[" + _u + "].reservedChildren += 1, $reservedChildren += 1]]">>
			<<if ($slaves[_u].pregType > 1) && ($reservedChildren + $slaves[_u].pregType - $slaves[_u].reservedChildren) <= $freeTanks>>
				| <<print "[[Keep all of her children|Incubator][$reservedChildren += $slaves["+ _u + "].pregType, $slaves[" + _u + "].reservedChildren += $slaves["+ _u +"].pregType]]">>
			<</if>>
		<<elseif $reservedChildren == $freeTanks>>
			<br>&nbsp;&nbsp;&nbsp;&nbsp;
			You have @@.red;no room for her offspring.@@
		<</if>>
		<<set _eligibility = 1>>
	<</if>>
	<</if>>
<</for>>
<<if _eligibility == 0>>
	<br>
	//You have no pregnant slaves bearing eligible children.//
<</if>>
<<if $PC.pregKnown == 1 && $PC.pregSource != -1>>
	<br>''@@.pink;You're pregnant@@'' and going to have
		<<switch $PC.pregType>>
		<<case 1>>
			a baby.
		<<case 2>>
			twins.
		<<case 3>>
			triplets.
		<<case 4>>
			quadruplets.
		<<case 5>>
			quintuplets.
		<<case 6>>
			sextuplets.
		<<case 7>>
			septuplets.
		<<case 8>>
			octuplets.
		<</switch>>
	<<if $PC.reservedChildren > 0>>
		<<set _childrenReserved = 1>>
		<<if $PC.pregType == 1>>
			Your child will be placed in $incubatorName.
		<<elseif $PC.reservedChildren < $PC.pregType>>
			$PC.reservedChildren of your children will be placed in $incubatorName.
		<<elseif $PC.pregType == 2>>
			Both of your children will be placed in $incubatorName.
		<<else>>
			All $PC.reservedChildren of your children will be placed in $incubatorName.
		<</if>>
		<<if ($PC.reservedChildren < $PC.pregType) && ($reservedChildren < $freeTanks)>>
			<br>&nbsp;&nbsp;&nbsp;&nbsp;
			<<print "[[Keep another child|Incubator][$PC.reservedChildren += 1, $reservedChildren += 1]]">>
			<<if $PC.reservedChildren > 0>>
				| <<print "[[Keep one less child|Incubator][$PC.reservedChildren -= 1, $reservedChildren -= 1]]">>
			<</if>>
			<<if $PC.reservedChildren > 1>>
				| <<print "[[Keep none of your children|Incubator][$reservedChildren -= $PC.reservedChildren, $PC.reservedChildren = 0]]">>
			<</if>>
			<<if ($reservedChildren + $PC.pregType - $PC.reservedChildren) <= $freeTanks>>
				| <<print "[[Keep the rest of your children|Incubator][$reservedChildren += ($PC.pregType - $PC.reservedChildren), $PC.reservedChildren += ($PC.pregType - $PC.reservedChildren)]]">>
			<</if>>
		<<elseif ($PC.reservedChildren == $PC.pregType) || ($reservedChildren == $freeTanks)>>
			<br>&nbsp;&nbsp;&nbsp;&nbsp;
			<<print "[[Keep one less child|Incubator][$PC.reservedChildren -= 1, $reservedChildren -= 1]]">>
			<<if $PC.reservedChildren > 1>>
				| <<print "[[Keep none of your children|Incubator][$reservedChildren -= $PC.reservedChildren, $PC.reservedChildren = 0]]">>
			<</if>>
		<</if>>
	<<elseif $reservedChildren < $freeTanks>>
		You have <<if $freeTanks == 1>>an<</if>> @@.lime;available aging tank<<if $freeTanks > 1>>s<</if>>.@@
		<br>&nbsp;&nbsp;&nbsp;&nbsp;
		<<print "[[Keep "+ (($PC.pregType > 1) ? "a" : "your") +" child|Incubator][$PC.reservedChildren += 1, $reservedChildren += 1]]">>
		<<if ($PC.pregType > 1) && ($reservedChildren + $PC.pregType - $PC.reservedChildren) <= $freeTanks>>
			| <<print "[[Keep all of your children|Incubator][$reservedChildren += $PC.pregType, $PC.reservedChildren += $PC.pregType]]">>
		<</if>>
	<<elseif $reservedChildren == $freeTanks>>
		<br>&nbsp;&nbsp;&nbsp;&nbsp;
		You have @@.red;no room for your offspring.@@
	<</if>>
<</if>>
<<if $reservedChildren != 0 || _childrenReserved == 1>> /* the oops I made it go negative somehow button */
	<br>
	 <<link "Clear all reserved children">>
		<<for _u = 0; _u < _SL; _u++>>
			<<if $slaves[_u].reservedChildren != 0>>
				<<set $slaves[_u].reservedChildren = 0>>
			<</if>>
		<</for>>
		<<set $PC.reservedChildren = 0>>
		<<set $reservedChildren = 0>>
		<<goto "Incubator">>
	 <</link>>
<</if>>

<br><br>
Target age for release: <<textbox "$targetAge" $targetAge "Incubator">> [[Minimum Legal Age|Incubator][$targetAge = $minimumSlaveAge]] | [[Average Age of Fertility|Incubator][$targetAge = $fertilityAge]] | [[Average Age of Potency|Incubator][$targetAge = $potencyAge]] | [[Legal Adulthood|Incubator][$targetAge = 18]]
//Setting will not be applied to tanks in use.//

<br>
<<if $incubatorUpgradeSpeed == 52>>
	It has been upgraded with perfected growth accelerants; children grow at the rate of 1 week to 1 year.
<<elseif $incubatorUpgradeSpeed == 18>>
	It has been upgraded with advanced experimental growth accelerants; children grow at the rate of 3 weeks to 1 year. [[Fund speculative research into maximizing growth rate|Incubator][$cash -= Math.trunc(500000*$upgradeMultiplierArcology), $incubatorUpgradeSpeed = 52]] //Costs <<print cashFormat(Math.trunc(500000*$upgradeMultiplierArcology))>> and will increase upkeep costs//
<<elseif $incubatorUpgradeSpeed == 9>>
	It has been upgraded with advanced growth accelerants; children grow at the rate of 6 weeks to 1 year. [[Fund research into increasing growth rate even further|Incubator][$cash -= Math.trunc(75000*$upgradeMultiplierArcology), $incubatorUpgradeSpeed = 18]] //Costs <<print cashFormat(Math.trunc(75000*$upgradeMultiplierArcology))>> and will increase upkeep costs//
<<elseif $incubatorUpgradeSpeed == 6>>
	It has been upgraded with growth accelerants; children grow at the rate of 9 weeks to 1 year. [[Further upgrade the incubators with specialized stem cells to speed growth|Incubator][$cash -= Math.trunc(30000*$upgradeMultiplierArcology), $incubatorUpgradeSpeed = 9]] //Costs <<print cashFormat(Math.trunc(30000*$upgradeMultiplierArcology))>> and will increase upkeep costs//
<<elseif $incubatorUpgradeSpeed == 5>>
	The incubation tanks are basic; children grow at the rate of 12 weeks to 1 year. [[Upgrade the incubators with growth accelerating drugs|Incubator][$cash -= Math.trunc(30000*$upgradeMultiplierArcology), $incubatorUpgradeSpeed = 6]] //Costs <<print cashFormat(Math.trunc(30000*$upgradeMultiplierArcology))>> and will increase upkeep costs//
<</if>>

<br>
<<if $incubatorUpgradeWeight == 1>>
	Advanced caloric monitoring systems have been installed in the tanks to monitor and maintain a developing child's weight.
<<else>>
	There are no systems in place to control a growing child's weight; they will likely come out emaciated from rapidly growing. [[Upgrade the growth tanks with weight monitoring systems|Incubator][$cash -= Math.trunc(20000*$upgradeMultiplierArcology), $incubatorUpgradeWeight = 1]] //Costs <<print cashFormat(Math.trunc(20000*$upgradeMultiplierArcology))>> and will increase upkeep costs//
<</if>>

<br>
<<if $incubatorUpgradeMuscles == 1>>
	Advanced monitoring and steroid injection systems have been installed in the tanks to monitor and maintain a developing child's musculature.
<<else>>
	There are no systems in place to control a growing child's musculature; they will likely come out frail and weak from rapidly growing. [[Upgrade the growth tanks with muscle monitoring systems|Incubator][$cash -= Math.trunc(20000*$upgradeMultiplierArcology), $incubatorUpgradeMuscles = 1]] //Costs <<print cashFormat(Math.trunc(20000*$upgradeMultiplierArcology))>> and will increase upkeep costs//
<</if>>

<br>
<<if $incubatorUpgradeReproduction == 1>>
	Advanced monitoring and hormone injection systems have been installed in the tanks to influence a developing child's reproductive organs.
<<else>>
	There are no systems in place to control a growing child's reproductive capability. [[Upgrade the growth tanks with hormone monitoring systems|Incubator][$cash -= Math.trunc(50000*$upgradeMultiplierArcology), $incubatorUpgradeReproduction = 1]] //Costs <<print cashFormat(Math.trunc(50000*$upgradeMultiplierArcology))>> and will increase upkeep costs//
<</if>>

<br>
<<if $incubatorUpgradeOrgans == 1>>
	Surgical tools have been added to the tank to be able to extract tissue samples from the occupant.
<<elseif $organFarmUpgrade >= 1>>
	The tanks lack the ability to extract tissue samples to be used by the organ fabricator. [[Upgrade the growth tanks with surgical extraction tools|Incubator][$cash -= Math.trunc(10000*$upgradeMultiplierArcology), $incubatorUpgradeOrgans = 1]] //Costs <<print cashFormat(Math.trunc(10000*$upgradeMultiplierArcology))>> and will increase upkeep costs//
<<else>>
	The tanks lack the ability to extract tissue samples and the dispensary lacks the ability to make use of them to fabricate organs.
<</if>>

<br>
<<if $incubatorUpgradeGrowthStims == 1>>
	Advanced monitoring and stimulant injection systems have been installed in the tanks to monitor and maintain a developing child's height.
<<elseif $growthStim == 1>>
	There are no systems in place to control a growing child's height. [[Upgrade the growth tanks with stimulants injection systems|Incubator][$cash -= Math.trunc(20000*$upgradeMultiplierArcology), $incubatorUpgradeGrowthStims = 1]] //Costs <<print cashFormat(Math.trunc(20000*$upgradeMultiplierArcology))>> and will increase upkeep costs//
<<else>>
	There are no systems in place to control a growing child's height and you lack the capability to fabricate growth stimulants.
<</if>>

<br>
<<if $incubatorImprintSetting == "terror">>
	The imprinting system is currently focused on making her devoted but fearful of you. The imprinting cycle is locked upon incubation start.
	[[Switch the system to focus on attachment|Incubator][$incubatorImprintSetting = "trust"]] //Only affects new infants//
<<else>>
	The imprinting system is currently focused on making her devoted and trusting of you. The imprinting cycle is locked upon incubation start.
	[[Switch the system to focus on dependence|Incubator][$incubatorImprintSetting = "terror"]] //Only affects new infants//
<</if>>

<<if $incubatorSlaves > 0>>
<<for $i = 0; $i < $incubatorSlaves; $i++>>
	<<capture $i>>
		<br><br>@@.pink;$tanks[$i].slaveName@@ occupies this tank. She appears to be <<if $tanks[$i].genes == "XX">>a natural girl<<else>>a natural boy<</if>>, with $tanks[$i].hColor hair<<if $tanks[$i].eyes != -2>> and $tanks[$i].eyeColor eyes.<<else>>. She most likely will be blind.<</if>>
		Statistical projections indicates that once released she will be around <<print $tanks[$i].height + random(-5,5)>> cm tall. Most likely she will be
			<<if $tanks[$i].weight <= 30 && $tanks[$i].weight >= -30>>
				at a healthy weight and
			<<elseif $tanks[$i].weight >= 31 && $tanks[$i].weight <= 95>>
				quite overweight and
			<<elseif $tanks[$i].weight >= 96>>
				very overweight and
			<<elseif $tanks[$i].weight <= -31 && $tanks[$i].weight >= -95>>
				quite thin and
			<<elseif  $tanks[$i].weight <= -96>>
				very thin and
			<</if>>
			<<if $tanks[$i].muscles <= 5 && $tanks[$i].muscles >= -5>>
				with a normal musculature.
			<<elseif $tanks[$i].muscles >= 6 && $tanks[$i].muscles <= 30>>
				quite toned.
			<<elseif $tanks[$i].muscles >= 31 && $tanks[$i].muscles <= 95>>
				quite muscular.
			<<elseif $tanks[$i].muscles >= 96>>
				with a powerful musculature.
			<<elseif $tanks[$i].muscles <= -6 && $tanks[$i].muscles >= -30>>
				quite weak.
			<<elseif $tanks[$i].muscles <= -31 && $tanks[$i].muscles >= 95>>
				very weak.
			<<elseif $tanks[$i].muscles <= -96>>
				extremely weak.
			<</if>>
			Her breasts are projected to be
			<<if $tanks[$i].boobs <= 799>>
				of normal size,
			<<elseif $tanks[$i].boobs <= 1799>>
				of generous size,
			<<elseif $tanks[$i].boobs <= 3249>>
				of incredible size,
			<<else>>
				of humongous size,
			<</if>>
			while her rear will be
			<<if $tanks[$i].butt <= 3>>
				a healthy size.
			<<elseif $tanks[$i].butt <= 6>>
				quite impressive.
			<<elseif $tanks[$i].butt <= 9>>
				very impressive.
			<<else>>
				immense.
			<</if>>
			<<if $tanks[$i].dick > 0>>
				<<if $tanks[$i].dick <= 3>>
					The latest analysis reported her dick will end up being around the average
				<<elseif $tanks[$i].dick >= 4 && $tanks[$i].dick <= 6>>
					The latest analysis reported her dick will end up being above average
				<<elseif $tanks[$i].dick >= 7 && $tanks[$i].dick <= 9>>
					The latest analysis reported her dick will end up being far above the average
				<<else>>
					The latest analysis reported her dick will end up being of monstrous size
				<</if>>
			<</if>>
			<<if $tanks[$i].balls > 0>>
				<<if $tanks[$i].balls <= 3>>
					and her testicles will reach a normal size.
				<<elseif $tanks[$i].balls >= 4 && $tanks[$i].balls <= 6>>
					and her testicles will be of remarkable size.
				<<elseif $tanks[$i].balls >= 7 && $tanks[$i].balls <= 9>>
					and her testicles will reach an impressive size.
				<<else>>
					and her testicles will reach a monstrous size.
				<</if>>
			<</if>>
			<<if $tanks[$i].pubertyXX == 1 &&  $tanks[$i].ovaries == 1>>
				Scanners report her womb is fertile.
			<<else>>
				Scanners report she is not fertile,
				<<if $tanks[$i].pubertyXX == 0>>
					as she has not yet entered puberty.
				<<else>>
					it appears her womb is sterile.
				<</if>>
			<</if>>
		<<if $tanks[$i].growTime <= 0>>
			<<set $readySlaves = 1>>
			<br>She is ready to be released from her tank.
		<<else>>
			<br>Her growth is currently being accelerated. She will be ready for release in about <<print Math.round($tanks[$i].growTime/$incubatorUpgradeSpeed)>> weeks.
		<</if>>
		<br>The tank is imprinting her with basic life and sexual skills, though she will still be very naive and inexperienced on release.
		<<if $tanks[$i].tankBaby == 2>>
			The majority of her indoctrination involves painting the world as a terrible place where only horror awaits her should she not obey her owner.
		<<else>>
			The majority of her indoctrination involves painting the world as a wonderful place only if she is unconditionally devoted to, and absolutely trusting of, her owner.
		<</if>>
		<<if $incubatorUpgradeWeight == 1>>
			<br>
			<<if $incubatorWeightSetting == 1>>
				Her weight is not being properly managed, saving costs but likely causing excessive weight gain.
			<<elseif $incubatorWeightSetting == 2>>
				Her weight is being carefully managed; she will be released at a healthy weight.
			<<elseif $incubatorWeightSetting == 0>>
				Weight management systems are offline; she will likely be malnourished.
			<</if>>
		<</if>>
		<<if $incubatorUpgradeMuscles == 1>>
			<br>
			<<if $incubatorMusclesSetting == 2>>
				Her strength levels are purposefully set higher than recommended; excessive muscle gain likely.
			<<elseif $incubatorMusclesSetting == 1>>
				Her musculature is being carefully managed; she will be released with near normal strength.
			<<elseif $incubatorMusclesSetting == 0>>
				Strength management systems are offline; she will likely be released extremely weak.
			<</if>>
		<</if>>
		<<if $incubatorUpgradeGrowthStims == 1>>
			<br>
			<<if $incubatorGrowthStimsSetting == 2>>
				She is being injected with higher than recommended doses of stimulants; exceeding expected final height is likely.
			<<elseif $incubatorGrowthStimsSetting == 1>>
				She is injected with the recommended dosage of stimulants; she will grow to her full expected height.
			<<elseif $incubatorGrowthStimsSetting == 0>>
				Growth stimulant injection systems are offline; she will develop normally.
			<</if>>
		<</if>>
		<<if $incubatorUpgradeReproduction == 1>>
			<br>
			<<if $incubatorReproductionSetting == 2>>
				Her hormone levels are purposefully set higher than recommended; over-active reproductive systems likely.
			<<elseif $incubatorReproductionSetting == 1>>
				Her hormone levels are being carefully managed; she will be released with fully functional reproductive organs.
			<<elseif $incubatorReproductionSetting == 0>>
				Reproduction management systems are offline; she will undergo normal puberty.
			<</if>>
		<</if>>
		<<if $cheatMode == 1>>
			<br>''Cheatmode:''
			<<link "Retrieve immediately">>
				<<set $incubatorOldID = $tanks[$i].ID>>
				<<set $readySlave = $tanks.pluck([$i], [$i])>>
				<<goto "Incubator Retrieval Workaround">>
			<</link>>
		<</if>>
		<<if $incubatorUpgradeOrgans == 1>>
			<br>
			You can extract a sample and prepare a new organ for her to be implanted once she exits her tank.
			<<set _newOrgan = 0>>
			<<set $tankOrgans = {
				ovaries: 0,
				penis: 0,
				testicles:0,
				eyes: 0,
				voiceBox: 0}>>
			<<for _i = 0; _i < $incubatorOrgans.length; _i++>>
				<<if $tanks[$i].ID == $incubatorOrgans[_i].ID>>
					<<if $incubatorOrgans[_i].type == "ovaries">>
						<<set $tankOrgans.ovaries = 1>>
					<</if>>
					<<if $incubatorOrgans[_i].type == "testicles">>
						<<set $tankOrgans.testicles = 1>>
					<</if>>
					<<if $incubatorOrgans[_i].type == "penis">>
						<<set $tankOrgans.penis = 1>>
					<</if>>
					<<if $incubatorOrgans[_i].type == "eyes">>
						<<set $tankOrgans.eyes = 1>>
					<</if>>
					<<if $incubatorOrgans[_i].type == "voicebox">>
						<<set $tankOrgans.voicebox = 1>>
					<</if>>
				<</if>>
			<</for>>
			<<if $tanks[$i].genes == "XX">>
				Being a natural girl she possesses a functional vagina and ovaries, you can:
			<<else>>
				Being a natural boy he possesses a functional penis and balls, you can:
			<</if>>
			<br>
			<<if $tanks[$i].ovaries == 0 && $tankOrgans.ovaries != 1>>
				<<link "Prepare ovaries">>
					<<set $cash -= 10000>>
					<<set _newOrgan = {type: "ovaries", weeksToCompletion: "10", ID: 0}>>
					<<set _newOrgan.ID = $tanks[$i].ID>>
					<<set $incubatorOrgans.push(_newOrgan)>>
					<<goto "Incubator">>
				<</link>>
			<</if>>
			<<if $tanks[$i].dick == 0 && $tankOrgans.penis != 1>>
				<<link "Prepare penis">>
					<<set $cash -= 5000>>
					<<set _newOrgan = {type: "penis", weeksToCompletion: "5", ID: 0}>>
					<<set _newOrgan.ID = $tanks[$i].ID>>
					<<set $incubatorOrgans.push(_newOrgan)>>
					<<goto "Incubator">>
				<</link>>
			<</if>>
			<<if $tanks[$i].balls == 0 && $tankOrgans.testicles != 1>>
				|
				<<link "Prepare testicles">>
					<<set $cash -= 5000>>
					<<set _newOrgan = {type: "testicles", weeksToCompletion: "10", ID: 0}>>
					<<set _newOrgan.ID = $tanks[$i].ID>>
					<<set $incubatorOrgans.push(_newOrgan)>>
					<<goto "Incubator">>
				<</link>>
			<</if>>
			<<if $tanks[$i].eyes == -2 && $tankOrgans.eyes != 1>>
				<br>She appears to be blind:
				<<link "Prepare eyes">>
					<<set $cash -= 10000>>
					<<set _newOrgan = {type: "eyes", weeksToCompletion: "10", ID: 0}>>
					<<set _newOrgan.ID = $tanks[$i].ID>>
					<<set $incubatorOrgans.push(_newOrgan)>>
					<<goto "Incubator">>
				<</link>>
			<</if>>
			<<if $tanks[$i].voice == 0 && $tankOrgans.voicebox != 1>>
				<br>It appears she was born a mute:
				<<link "Prepare vocal cords">>
					<<set $cash -= 5000>>
					<<set _newOrgan = {type: "voicebox", weeksToCompletion: "5", ID: 0}>>
					<<set _newOrgan.ID = $tanks[$i].ID>>
					<<set $incubatorOrgans.push(_newOrgan)>>
					<<goto "Incubator">>
				<</link>>
			<</if>>
		<</if>>
	<</capture>>
<</for>>
<</if>>

<br>
<br>

<<if $incubatorUpgradeWeight == 1>>
	<<if $incubatorWeightSetting == 1>>
		Weight is not being properly managed, saving costs but likely causing excessive weight gain. [[Monitor|Incubator][$incubatorWeightSetting = 2]] | [[Disable|Incubator][$incubatorWeightSetting = 0]]
	<<elseif $incubatorWeightSetting == 2>>
		Weight is being carefully managed; children will be released at a healthy weight. [[Estimate only|Incubator][$incubatorWeightSetting = 1]] | [[Disable|Incubator][$incubatorWeightSetting = 0]]
	<<elseif $incubatorWeightSetting == 0>>
		Weight management systems are offline; children will likely be malnourished. [[Activate|Incubator][$incubatorWeightSetting = 2]]
	<</if>>
<</if>>
<br>
<<if $incubatorUpgradeMuscles == 1>>
	<<if $incubatorMusclesSetting == 2>>
		Strength levels are purposefully set higher than recommended; excessive muscle gain likely. [[Limit|Incubator][$incubatorMusclesSetting = 1]] | [[Disable|Incubator][$incubatorMusclesSetting = 0]]
	<<elseif $incubatorMusclesSetting == 1>>
		Musculature is being carefully managed; children will be released with near normal strength. [[Overload|Incubator][$incubatorMusclesSetting = 2]] | [[Disable|Incubator][$incubatorMusclesSetting = 0]]
	<<elseif $incubatorMusclesSetting == 0>>
		Strength management systems are offline; children will likely be released extremely weak. [[Activate|Incubator][$incubatorMusclesSetting = 1]]
	<</if>>
<</if>>
<br>
<<if $incubatorUpgradeReproduction == 1>>
	<<if $incubatorReproductionSetting == 2>>
		Hormone levels are purposefully set higher than recommended; over-active reproductive systems likely. [[Limit|Incubator][$incubatorReproductionSetting = 1]] | [[Disable|Incubator][$incubatorReproductionSetting = 0]]
	<<elseif $incubatorReproductionSetting == 1>>
		Hormone levels are being carefully managed; children will be released with fully functional reproductive organs. [[Overload|Incubator][$incubatorReproductionSetting = 2]] | [[Disable|Incubator][$incubatorReproductionSetting = 0]]
	<<elseif $incubatorReproductionSetting == 0>>
		Reproduction management systems are offline; children will undergo normal puberty. [[Activate|Incubator][$incubatorReproductionSetting = 1]]
	<</if>>
<</if>>
<br>
<<if $incubatorUpgradeGrowthStims == 1>>
	<<if $incubatorGrowthStimsSetting == 2>>
		She is injected with higher than recommended doses of stimulants; exceeding expected final height is likely. [[Limit|Incubator][$incubatorGrowthStimsSetting = 1]] | [[Disable|Incubator][$incubatorGrowthStimsSetting = 0]]
	<<elseif $incubatorGrowthStimsSetting == 1>>
		She is injected with the recommended dosage of stimulants; she will grow to her full expected height. [[Overload|Incubator][$incubatorGrowthStimsSetting = 2]] | [[Disable|Incubator][$incubatorGrowthStimsSetting = 0]]
	<<elseif $incubatorGrowthStimsSetting == 0>>
		Growth stimulant injection systems are offline; she will develop normally. [[Activate|Incubator][$incubatorGrowthStimsSetting = 1]]
	<</if>>
<</if>>

<<if $readySlaves == 1>>
	<<for $i = 0; $i < $incubatorSlaves; $i++>>
		<<if $tanks[$i].growTime <= 0>>
			<<set $incubatorOldID = $tanks[$i].ID>>
			<<set $readySlave = $tanks.pluck([$i], [$i])>>
			<<break>>
		<</if>>
	<</for>>
	<<goto "Incubator Retrieval Workaround">>
<</if>>

<br><br>Rename $incubatorName: <<textbox "$incubatorName" $incubatorName "Incubator">> //Use a noun or similar short phrase//

